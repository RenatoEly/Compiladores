/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.atomic_type_specifier;
import org.xtext.example.mydsl.myDsl.enum_specifier;
import org.xtext.example.mydsl.myDsl.intType;
import org.xtext.example.mydsl.myDsl.struct_or_union_specifier;
import org.xtext.example.mydsl.myDsl.type_specifier;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>int Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.intTypeImpl#getAtomic_type_specifier <em>Atomic type specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.intTypeImpl#getStruct_or_union_specifier <em>Struct or union specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.intTypeImpl#getEnum_specifier <em>Enum specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.intTypeImpl#getTypedef_name <em>Typedef name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.intTypeImpl#getValue <em>Value</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.intTypeImpl#getInt_type <em>Int type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class intTypeImpl extends simple_expressionImpl implements intType
{
  /**
   * The cached value of the '{@link #getAtomic_type_specifier() <em>Atomic type specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtomic_type_specifier()
   * @generated
   * @ordered
   */
  protected atomic_type_specifier atomic_type_specifier;

  /**
   * The cached value of the '{@link #getStruct_or_union_specifier() <em>Struct or union specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStruct_or_union_specifier()
   * @generated
   * @ordered
   */
  protected struct_or_union_specifier struct_or_union_specifier;

  /**
   * The cached value of the '{@link #getEnum_specifier() <em>Enum specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnum_specifier()
   * @generated
   * @ordered
   */
  protected enum_specifier enum_specifier;

  /**
   * The default value of the '{@link #getTypedef_name() <em>Typedef name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypedef_name()
   * @generated
   * @ordered
   */
  protected static final String TYPEDEF_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTypedef_name() <em>Typedef name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypedef_name()
   * @generated
   * @ordered
   */
  protected String typedef_name = TYPEDEF_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getInt_type() <em>Int type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInt_type()
   * @generated
   * @ordered
   */
  protected static final String INT_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInt_type() <em>Int type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInt_type()
   * @generated
   * @ordered
   */
  protected String int_type = INT_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected intTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.INT_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public atomic_type_specifier getAtomic_type_specifier()
  {
    return atomic_type_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAtomic_type_specifier(atomic_type_specifier newAtomic_type_specifier, NotificationChain msgs)
  {
    atomic_type_specifier oldAtomic_type_specifier = atomic_type_specifier;
    atomic_type_specifier = newAtomic_type_specifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER, oldAtomic_type_specifier, newAtomic_type_specifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtomic_type_specifier(atomic_type_specifier newAtomic_type_specifier)
  {
    if (newAtomic_type_specifier != atomic_type_specifier)
    {
      NotificationChain msgs = null;
      if (atomic_type_specifier != null)
        msgs = ((InternalEObject)atomic_type_specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER, null, msgs);
      if (newAtomic_type_specifier != null)
        msgs = ((InternalEObject)newAtomic_type_specifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER, null, msgs);
      msgs = basicSetAtomic_type_specifier(newAtomic_type_specifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER, newAtomic_type_specifier, newAtomic_type_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_or_union_specifier getStruct_or_union_specifier()
  {
    return struct_or_union_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStruct_or_union_specifier(struct_or_union_specifier newStruct_or_union_specifier, NotificationChain msgs)
  {
    struct_or_union_specifier oldStruct_or_union_specifier = struct_or_union_specifier;
    struct_or_union_specifier = newStruct_or_union_specifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER, oldStruct_or_union_specifier, newStruct_or_union_specifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStruct_or_union_specifier(struct_or_union_specifier newStruct_or_union_specifier)
  {
    if (newStruct_or_union_specifier != struct_or_union_specifier)
    {
      NotificationChain msgs = null;
      if (struct_or_union_specifier != null)
        msgs = ((InternalEObject)struct_or_union_specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER, null, msgs);
      if (newStruct_or_union_specifier != null)
        msgs = ((InternalEObject)newStruct_or_union_specifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER, null, msgs);
      msgs = basicSetStruct_or_union_specifier(newStruct_or_union_specifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER, newStruct_or_union_specifier, newStruct_or_union_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enum_specifier getEnum_specifier()
  {
    return enum_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnum_specifier(enum_specifier newEnum_specifier, NotificationChain msgs)
  {
    enum_specifier oldEnum_specifier = enum_specifier;
    enum_specifier = newEnum_specifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__ENUM_SPECIFIER, oldEnum_specifier, newEnum_specifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnum_specifier(enum_specifier newEnum_specifier)
  {
    if (newEnum_specifier != enum_specifier)
    {
      NotificationChain msgs = null;
      if (enum_specifier != null)
        msgs = ((InternalEObject)enum_specifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INT_TYPE__ENUM_SPECIFIER, null, msgs);
      if (newEnum_specifier != null)
        msgs = ((InternalEObject)newEnum_specifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.INT_TYPE__ENUM_SPECIFIER, null, msgs);
      msgs = basicSetEnum_specifier(newEnum_specifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__ENUM_SPECIFIER, newEnum_specifier, newEnum_specifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTypedef_name()
  {
    return typedef_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypedef_name(String newTypedef_name)
  {
    String oldTypedef_name = typedef_name;
    typedef_name = newTypedef_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__TYPEDEF_NAME, oldTypedef_name, typedef_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInt_type()
  {
    return int_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInt_type(String newInt_type)
  {
    String oldInt_type = int_type;
    int_type = newInt_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.INT_TYPE__INT_TYPE, oldInt_type, int_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER:
        return basicSetAtomic_type_specifier(null, msgs);
      case MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER:
        return basicSetStruct_or_union_specifier(null, msgs);
      case MyDslPackage.INT_TYPE__ENUM_SPECIFIER:
        return basicSetEnum_specifier(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER:
        return getAtomic_type_specifier();
      case MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER:
        return getStruct_or_union_specifier();
      case MyDslPackage.INT_TYPE__ENUM_SPECIFIER:
        return getEnum_specifier();
      case MyDslPackage.INT_TYPE__TYPEDEF_NAME:
        return getTypedef_name();
      case MyDslPackage.INT_TYPE__VALUE:
        return getValue();
      case MyDslPackage.INT_TYPE__INT_TYPE:
        return getInt_type();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER:
        setAtomic_type_specifier((atomic_type_specifier)newValue);
        return;
      case MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER:
        setStruct_or_union_specifier((struct_or_union_specifier)newValue);
        return;
      case MyDslPackage.INT_TYPE__ENUM_SPECIFIER:
        setEnum_specifier((enum_specifier)newValue);
        return;
      case MyDslPackage.INT_TYPE__TYPEDEF_NAME:
        setTypedef_name((String)newValue);
        return;
      case MyDslPackage.INT_TYPE__VALUE:
        setValue((String)newValue);
        return;
      case MyDslPackage.INT_TYPE__INT_TYPE:
        setInt_type((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER:
        setAtomic_type_specifier((atomic_type_specifier)null);
        return;
      case MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER:
        setStruct_or_union_specifier((struct_or_union_specifier)null);
        return;
      case MyDslPackage.INT_TYPE__ENUM_SPECIFIER:
        setEnum_specifier((enum_specifier)null);
        return;
      case MyDslPackage.INT_TYPE__TYPEDEF_NAME:
        setTypedef_name(TYPEDEF_NAME_EDEFAULT);
        return;
      case MyDslPackage.INT_TYPE__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case MyDslPackage.INT_TYPE__INT_TYPE:
        setInt_type(INT_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER:
        return atomic_type_specifier != null;
      case MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER:
        return struct_or_union_specifier != null;
      case MyDslPackage.INT_TYPE__ENUM_SPECIFIER:
        return enum_specifier != null;
      case MyDslPackage.INT_TYPE__TYPEDEF_NAME:
        return TYPEDEF_NAME_EDEFAULT == null ? typedef_name != null : !TYPEDEF_NAME_EDEFAULT.equals(typedef_name);
      case MyDslPackage.INT_TYPE__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
      case MyDslPackage.INT_TYPE__INT_TYPE:
        return INT_TYPE_EDEFAULT == null ? int_type != null : !INT_TYPE_EDEFAULT.equals(int_type);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == type_specifier.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER: return MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER;
        case MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER: return MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER;
        case MyDslPackage.INT_TYPE__ENUM_SPECIFIER: return MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER;
        case MyDslPackage.INT_TYPE__TYPEDEF_NAME: return MyDslPackage.TYPE_SPECIFIER__TYPEDEF_NAME;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == type_specifier.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER: return MyDslPackage.INT_TYPE__ATOMIC_TYPE_SPECIFIER;
        case MyDslPackage.TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER: return MyDslPackage.INT_TYPE__STRUCT_OR_UNION_SPECIFIER;
        case MyDslPackage.TYPE_SPECIFIER__ENUM_SPECIFIER: return MyDslPackage.INT_TYPE__ENUM_SPECIFIER;
        case MyDslPackage.TYPE_SPECIFIER__TYPEDEF_NAME: return MyDslPackage.INT_TYPE__TYPEDEF_NAME;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (typedef_name: ");
    result.append(typedef_name);
    result.append(", value: ");
    result.append(value);
    result.append(", int_type: ");
    result.append(int_type);
    result.append(')');
    return result.toString();
  }

} //intTypeImpl
