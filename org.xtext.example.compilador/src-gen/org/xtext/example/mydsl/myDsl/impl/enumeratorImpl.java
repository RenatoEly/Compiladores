/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.constant_expression;
import org.xtext.example.mydsl.myDsl.enumeration_constant;
import org.xtext.example.mydsl.myDsl.enumerator;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>enumerator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.enumeratorImpl#getEnumeration_constant <em>Enumeration constant</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.enumeratorImpl#getConstant_expression <em>Constant expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class enumeratorImpl extends MinimalEObjectImpl.Container implements enumerator
{
  /**
   * The cached value of the '{@link #getEnumeration_constant() <em>Enumeration constant</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumeration_constant()
   * @generated
   * @ordered
   */
  protected enumeration_constant enumeration_constant;

  /**
   * The cached value of the '{@link #getConstant_expression() <em>Constant expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_expression()
   * @generated
   * @ordered
   */
  protected constant_expression constant_expression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected enumeratorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ENUMERATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enumeration_constant getEnumeration_constant()
  {
    return enumeration_constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnumeration_constant(enumeration_constant newEnumeration_constant, NotificationChain msgs)
  {
    enumeration_constant oldEnumeration_constant = enumeration_constant;
    enumeration_constant = newEnumeration_constant;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT, oldEnumeration_constant, newEnumeration_constant);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEnumeration_constant(enumeration_constant newEnumeration_constant)
  {
    if (newEnumeration_constant != enumeration_constant)
    {
      NotificationChain msgs = null;
      if (enumeration_constant != null)
        msgs = ((InternalEObject)enumeration_constant).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT, null, msgs);
      if (newEnumeration_constant != null)
        msgs = ((InternalEObject)newEnumeration_constant).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT, null, msgs);
      msgs = basicSetEnumeration_constant(newEnumeration_constant, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT, newEnumeration_constant, newEnumeration_constant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant_expression getConstant_expression()
  {
    return constant_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstant_expression(constant_expression newConstant_expression, NotificationChain msgs)
  {
    constant_expression oldConstant_expression = constant_expression;
    constant_expression = newConstant_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION, oldConstant_expression, newConstant_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstant_expression(constant_expression newConstant_expression)
  {
    if (newConstant_expression != constant_expression)
    {
      NotificationChain msgs = null;
      if (constant_expression != null)
        msgs = ((InternalEObject)constant_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION, null, msgs);
      if (newConstant_expression != null)
        msgs = ((InternalEObject)newConstant_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION, null, msgs);
      msgs = basicSetConstant_expression(newConstant_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION, newConstant_expression, newConstant_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT:
        return basicSetEnumeration_constant(null, msgs);
      case MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION:
        return basicSetConstant_expression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT:
        return getEnumeration_constant();
      case MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION:
        return getConstant_expression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT:
        setEnumeration_constant((enumeration_constant)newValue);
        return;
      case MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION:
        setConstant_expression((constant_expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT:
        setEnumeration_constant((enumeration_constant)null);
        return;
      case MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION:
        setConstant_expression((constant_expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ENUMERATOR__ENUMERATION_CONSTANT:
        return enumeration_constant != null;
      case MyDslPackage.ENUMERATOR__CONSTANT_EXPRESSION:
        return constant_expression != null;
    }
    return super.eIsSet(featureID);
  }

} //enumeratorImpl
