/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.equality_expression2;
import org.xtext.example.mydsl.myDsl.relational_expression;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>equality expression2</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.equality_expression2Impl#getEq_op <em>Eq op</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.equality_expression2Impl#getRelational_expression <em>Relational expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.equality_expression2Impl#getEquality_expression2 <em>Equality expression2</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.equality_expression2Impl#getNe_op <em>Ne op</em>}</li>
 * </ul>
 *
 * @generated
 */
public class equality_expression2Impl extends MinimalEObjectImpl.Container implements equality_expression2
{
  /**
   * The default value of the '{@link #getEq_op() <em>Eq op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEq_op()
   * @generated
   * @ordered
   */
  protected static final String EQ_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEq_op() <em>Eq op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEq_op()
   * @generated
   * @ordered
   */
  protected String eq_op = EQ_OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getRelational_expression() <em>Relational expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelational_expression()
   * @generated
   * @ordered
   */
  protected relational_expression relational_expression;

  /**
   * The cached value of the '{@link #getEquality_expression2() <em>Equality expression2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEquality_expression2()
   * @generated
   * @ordered
   */
  protected equality_expression2 equality_expression2;

  /**
   * The default value of the '{@link #getNe_op() <em>Ne op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNe_op()
   * @generated
   * @ordered
   */
  protected static final String NE_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNe_op() <em>Ne op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNe_op()
   * @generated
   * @ordered
   */
  protected String ne_op = NE_OP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected equality_expression2Impl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.EQUALITY_EXPRESSION2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEq_op()
  {
    return eq_op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEq_op(String newEq_op)
  {
    String oldEq_op = eq_op;
    eq_op = newEq_op;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EQUALITY_EXPRESSION2__EQ_OP, oldEq_op, eq_op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public relational_expression getRelational_expression()
  {
    return relational_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelational_expression(relational_expression newRelational_expression, NotificationChain msgs)
  {
    relational_expression oldRelational_expression = relational_expression;
    relational_expression = newRelational_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION, oldRelational_expression, newRelational_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRelational_expression(relational_expression newRelational_expression)
  {
    if (newRelational_expression != relational_expression)
    {
      NotificationChain msgs = null;
      if (relational_expression != null)
        msgs = ((InternalEObject)relational_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION, null, msgs);
      if (newRelational_expression != null)
        msgs = ((InternalEObject)newRelational_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION, null, msgs);
      msgs = basicSetRelational_expression(newRelational_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION, newRelational_expression, newRelational_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public equality_expression2 getEquality_expression2()
  {
    return equality_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEquality_expression2(equality_expression2 newEquality_expression2, NotificationChain msgs)
  {
    equality_expression2 oldEquality_expression2 = equality_expression2;
    equality_expression2 = newEquality_expression2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2, oldEquality_expression2, newEquality_expression2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEquality_expression2(equality_expression2 newEquality_expression2)
  {
    if (newEquality_expression2 != equality_expression2)
    {
      NotificationChain msgs = null;
      if (equality_expression2 != null)
        msgs = ((InternalEObject)equality_expression2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2, null, msgs);
      if (newEquality_expression2 != null)
        msgs = ((InternalEObject)newEquality_expression2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2, null, msgs);
      msgs = basicSetEquality_expression2(newEquality_expression2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2, newEquality_expression2, newEquality_expression2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNe_op()
  {
    return ne_op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNe_op(String newNe_op)
  {
    String oldNe_op = ne_op;
    ne_op = newNe_op;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EQUALITY_EXPRESSION2__NE_OP, oldNe_op, ne_op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION:
        return basicSetRelational_expression(null, msgs);
      case MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2:
        return basicSetEquality_expression2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.EQUALITY_EXPRESSION2__EQ_OP:
        return getEq_op();
      case MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION:
        return getRelational_expression();
      case MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2:
        return getEquality_expression2();
      case MyDslPackage.EQUALITY_EXPRESSION2__NE_OP:
        return getNe_op();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.EQUALITY_EXPRESSION2__EQ_OP:
        setEq_op((String)newValue);
        return;
      case MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION:
        setRelational_expression((relational_expression)newValue);
        return;
      case MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2:
        setEquality_expression2((equality_expression2)newValue);
        return;
      case MyDslPackage.EQUALITY_EXPRESSION2__NE_OP:
        setNe_op((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.EQUALITY_EXPRESSION2__EQ_OP:
        setEq_op(EQ_OP_EDEFAULT);
        return;
      case MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION:
        setRelational_expression((relational_expression)null);
        return;
      case MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2:
        setEquality_expression2((equality_expression2)null);
        return;
      case MyDslPackage.EQUALITY_EXPRESSION2__NE_OP:
        setNe_op(NE_OP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.EQUALITY_EXPRESSION2__EQ_OP:
        return EQ_OP_EDEFAULT == null ? eq_op != null : !EQ_OP_EDEFAULT.equals(eq_op);
      case MyDslPackage.EQUALITY_EXPRESSION2__RELATIONAL_EXPRESSION:
        return relational_expression != null;
      case MyDslPackage.EQUALITY_EXPRESSION2__EQUALITY_EXPRESSION2:
        return equality_expression2 != null;
      case MyDslPackage.EQUALITY_EXPRESSION2__NE_OP:
        return NE_OP_EDEFAULT == null ? ne_op != null : !NE_OP_EDEFAULT.equals(ne_op);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (eq_op: ");
    result.append(eq_op);
    result.append(", ne_op: ");
    result.append(ne_op);
    result.append(')');
    return result.toString();
  }

} //equality_expression2Impl
