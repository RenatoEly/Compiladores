/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.MODEL: return createModel();
      case MyDslPackage.PRIMARY_EXPRESSION: return createprimary_expression();
      case MyDslPackage.CONSTANT: return createconstant();
      case MyDslPackage.ENUMERATION_CONSTANT: return createenumeration_constant();
      case MyDslPackage.STRING_NOVA: return createstring_nova();
      case MyDslPackage.GENERIC_SELECTION: return creategeneric_selection();
      case MyDslPackage.GENERIC_ASSOC_LIST: return creategeneric_assoc_list();
      case MyDslPackage.GENERIC_ASSOC_LIST2: return creategeneric_assoc_list2();
      case MyDslPackage.GENERIC_ASSOCIATION: return creategeneric_association();
      case MyDslPackage.POSTFIX_EXPRESSION: return createpostfix_expression();
      case MyDslPackage.POSTFIX_EXPRESSION2: return createpostfix_expression2();
      case MyDslPackage.ARGUMENT_EXPRESSION_LIST: return createargument_expression_list();
      case MyDslPackage.ARGUMENT_EXPRESSION_LIST2: return createargument_expression_list2();
      case MyDslPackage.UNARY_EXPRESSION: return createunary_expression();
      case MyDslPackage.CAST_EXPRESSION: return createcast_expression();
      case MyDslPackage.MULTIPLICATIVE_EXPRESSION: return createmultiplicative_expression();
      case MyDslPackage.MULTIPLICATIVE_EXPRESSION2: return createmultiplicative_expression2();
      case MyDslPackage.ADDITIVE_EXPRESSION: return createadditive_expression();
      case MyDslPackage.ADDITIVE_EXPRESSION2: return createadditive_expression2();
      case MyDslPackage.SHIFT_EXPRESSION: return createshift_expression();
      case MyDslPackage.SHIFT_EXPRESSION2: return createshift_expression2();
      case MyDslPackage.RELATIONAL_EXPRESSION: return createrelational_expression();
      case MyDslPackage.RELATIONAL_EXPRESSION2: return createrelational_expression2();
      case MyDslPackage.EQUALITY_EXPRESSION: return createequality_expression();
      case MyDslPackage.EQUALITY_EXPRESSION2: return createequality_expression2();
      case MyDslPackage.AND_EXPRESSION: return createand_expression();
      case MyDslPackage.AND_EXPRESSION2: return createand_expression2();
      case MyDslPackage.EXCLUSIVE_OR_EXPRESSION: return createexclusive_or_expression();
      case MyDslPackage.EXCLUSIVE_OR_EXPRESSION2: return createexclusive_or_expression2();
      case MyDslPackage.INCLUSIVE_OR_EXPRESSION: return createinclusive_or_expression();
      case MyDslPackage.INCLUSIVE_OR_EXPRESSION2: return createinclusive_or_expression2();
      case MyDslPackage.LOGICAL_AND_EXPRESSION: return createlogical_and_expression();
      case MyDslPackage.LOGICAL_AND_EXPRESSION2: return createlogical_and_expression2();
      case MyDslPackage.LOGICAL_OR_EXPRESSION: return createlogical_or_expression();
      case MyDslPackage.LOGICAL_OR_EXPRESSION2: return createlogical_or_expression2();
      case MyDslPackage.CONDITIONAL_EXPRESSION: return createconditional_expression();
      case MyDslPackage.ASSIGNMENT_EXPRESSION: return createassignment_expression();
      case MyDslPackage.ASSIGNMENT_OPERATOR: return createassignment_operator();
      case MyDslPackage.EXPRESSION: return createexpression();
      case MyDslPackage.EXPRESSION2: return createexpression2();
      case MyDslPackage.CONSTANT_EXPRESSION: return createconstant_expression();
      case MyDslPackage.DECLARATION: return createdeclaration();
      case MyDslPackage.DECLARATION_SPECIFIERS: return createdeclaration_specifiers();
      case MyDslPackage.INIT_DECLARATOR_LIST: return createinit_declarator_list();
      case MyDslPackage.INIT_DECLARATOR_LIST2: return createinit_declarator_list2();
      case MyDslPackage.INIT_DECLARATOR: return createinit_declarator();
      case MyDslPackage.STORAGE_CLASS_SPECIFIER: return createstorage_class_specifier();
      case MyDslPackage.TYPE_SPECIFIER: return createtype_specifier();
      case MyDslPackage.STRUCT_OR_UNION_SPECIFIER: return createstruct_or_union_specifier();
      case MyDslPackage.STRUCT_OR_UNION: return createstruct_or_union();
      case MyDslPackage.STRUCT_DECLARATION_LIST: return createstruct_declaration_list();
      case MyDslPackage.STRUCT_DECLARATION_LIST2: return createstruct_declaration_list2();
      case MyDslPackage.STRUCT_DECLARATION: return createstruct_declaration();
      case MyDslPackage.SPECIFIER_QUALIFIER_LIST: return createspecifier_qualifier_list();
      case MyDslPackage.STRUCT_DECLARATOR_LIST: return createstruct_declarator_list();
      case MyDslPackage.STRUCT_DECLARATOR_LIST2: return createstruct_declarator_list2();
      case MyDslPackage.STRUCT_DECLARATOR: return createstruct_declarator();
      case MyDslPackage.ENUM_SPECIFIER: return createenum_specifier();
      case MyDslPackage.ENUMERATOR_LIST: return createenumerator_list();
      case MyDslPackage.ENUMERATOR_LIST2: return createenumerator_list2();
      case MyDslPackage.ENUMERATOR: return createenumerator();
      case MyDslPackage.ATOMIC_TYPE_SPECIFIER: return createatomic_type_specifier();
      case MyDslPackage.TYPE_QUALIFIER: return createtype_qualifier();
      case MyDslPackage.FUNCTION_SPECIFIER: return createfunction_specifier();
      case MyDslPackage.ALIGNMENT_SPECIFIER: return createalignment_specifier();
      case MyDslPackage.DECLARATOR: return createdeclarator();
      case MyDslPackage.DIRECT_DECLARATOR: return createdirect_declarator();
      case MyDslPackage.DIRECT_DECLARATOR2: return createdirect_declarator2();
      case MyDslPackage.POINTER: return createpointer();
      case MyDslPackage.TYPE_QUALIFIER_LIST: return createtype_qualifier_list();
      case MyDslPackage.TYPE_QUALIFIER_LIST2: return createtype_qualifier_list2();
      case MyDslPackage.PARAMETER_TYPE_LIST: return createparameter_type_list();
      case MyDslPackage.PARAMETER_LIST: return createparameter_list();
      case MyDslPackage.PARAMETER_LIST2: return createparameter_list2();
      case MyDslPackage.PARAMETER_DECLARATION: return createparameter_declaration();
      case MyDslPackage.IDENTIFIER_LIST: return createidentifier_list();
      case MyDslPackage.IDENTIFIER_LIST2: return createidentifier_list2();
      case MyDslPackage.TYPE_NAME: return createtype_name();
      case MyDslPackage.ABSTRACT_DECLARATOR: return createabstract_declarator();
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR: return createdirect_abstract_declarator();
      case MyDslPackage.DIRECT_ABSTRACT_DECLARATOR2: return createdirect_abstract_declarator2();
      case MyDslPackage.INITIALIZER: return createinitializer();
      case MyDslPackage.INITIALIZER_LIST: return createinitializer_list();
      case MyDslPackage.INITIALIZER_LIST2: return createinitializer_list2();
      case MyDslPackage.DESIGNATION: return createdesignation();
      case MyDslPackage.DESIGNATOR_LIST: return createdesignator_list();
      case MyDslPackage.DESIGNATOR_LIST2: return createdesignator_list2();
      case MyDslPackage.DESIGNATOR: return createdesignator();
      case MyDslPackage.STATIC_ASSERT_DECLARATION: return createstatic_assert_declaration();
      case MyDslPackage.STATEMENT: return createstatement();
      case MyDslPackage.LABELED_STATEMENT: return createlabeled_statement();
      case MyDslPackage.COMPOUND_STATEMENT: return createcompound_statement();
      case MyDslPackage.BLOCK_ITEM: return createblock_item();
      case MyDslPackage.EXPRESSION_STATEMENT: return createexpression_statement();
      case MyDslPackage.SELECTION_STATEMENT: return createselection_statement();
      case MyDslPackage.ITERATION_STATEMENT: return createiteration_statement();
      case MyDslPackage.JUMP_STATEMENT: return createjump_statement();
      case MyDslPackage.TRANSLATION_UNIT: return createtranslation_unit();
      case MyDslPackage.EXTERNAL_DECLARATION: return createexternal_declaration();
      case MyDslPackage.FUNCTION_DEFINITION: return createfunction_definition();
      case MyDslPackage.DECLARATION_LIST: return createdeclaration_list();
      case MyDslPackage.DECLARATION_LIST2: return createdeclaration_list2();
      case MyDslPackage.INTEGER: return createinteger();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public primary_expression createprimary_expression()
  {
    primary_expressionImpl primary_expression = new primary_expressionImpl();
    return primary_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant createconstant()
  {
    constantImpl constant = new constantImpl();
    return constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enumeration_constant createenumeration_constant()
  {
    enumeration_constantImpl enumeration_constant = new enumeration_constantImpl();
    return enumeration_constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public string_nova createstring_nova()
  {
    string_novaImpl string_nova = new string_novaImpl();
    return string_nova;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public generic_selection creategeneric_selection()
  {
    generic_selectionImpl generic_selection = new generic_selectionImpl();
    return generic_selection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public generic_assoc_list creategeneric_assoc_list()
  {
    generic_assoc_listImpl generic_assoc_list = new generic_assoc_listImpl();
    return generic_assoc_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public generic_assoc_list2 creategeneric_assoc_list2()
  {
    generic_assoc_list2Impl generic_assoc_list2 = new generic_assoc_list2Impl();
    return generic_assoc_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public generic_association creategeneric_association()
  {
    generic_associationImpl generic_association = new generic_associationImpl();
    return generic_association;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public postfix_expression createpostfix_expression()
  {
    postfix_expressionImpl postfix_expression = new postfix_expressionImpl();
    return postfix_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public postfix_expression2 createpostfix_expression2()
  {
    postfix_expression2Impl postfix_expression2 = new postfix_expression2Impl();
    return postfix_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public argument_expression_list createargument_expression_list()
  {
    argument_expression_listImpl argument_expression_list = new argument_expression_listImpl();
    return argument_expression_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public argument_expression_list2 createargument_expression_list2()
  {
    argument_expression_list2Impl argument_expression_list2 = new argument_expression_list2Impl();
    return argument_expression_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public unary_expression createunary_expression()
  {
    unary_expressionImpl unary_expression = new unary_expressionImpl();
    return unary_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public cast_expression createcast_expression()
  {
    cast_expressionImpl cast_expression = new cast_expressionImpl();
    return cast_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public multiplicative_expression createmultiplicative_expression()
  {
    multiplicative_expressionImpl multiplicative_expression = new multiplicative_expressionImpl();
    return multiplicative_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public multiplicative_expression2 createmultiplicative_expression2()
  {
    multiplicative_expression2Impl multiplicative_expression2 = new multiplicative_expression2Impl();
    return multiplicative_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public additive_expression createadditive_expression()
  {
    additive_expressionImpl additive_expression = new additive_expressionImpl();
    return additive_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public additive_expression2 createadditive_expression2()
  {
    additive_expression2Impl additive_expression2 = new additive_expression2Impl();
    return additive_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public shift_expression createshift_expression()
  {
    shift_expressionImpl shift_expression = new shift_expressionImpl();
    return shift_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public shift_expression2 createshift_expression2()
  {
    shift_expression2Impl shift_expression2 = new shift_expression2Impl();
    return shift_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public relational_expression createrelational_expression()
  {
    relational_expressionImpl relational_expression = new relational_expressionImpl();
    return relational_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public relational_expression2 createrelational_expression2()
  {
    relational_expression2Impl relational_expression2 = new relational_expression2Impl();
    return relational_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public equality_expression createequality_expression()
  {
    equality_expressionImpl equality_expression = new equality_expressionImpl();
    return equality_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public equality_expression2 createequality_expression2()
  {
    equality_expression2Impl equality_expression2 = new equality_expression2Impl();
    return equality_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public and_expression createand_expression()
  {
    and_expressionImpl and_expression = new and_expressionImpl();
    return and_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public and_expression2 createand_expression2()
  {
    and_expression2Impl and_expression2 = new and_expression2Impl();
    return and_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public exclusive_or_expression createexclusive_or_expression()
  {
    exclusive_or_expressionImpl exclusive_or_expression = new exclusive_or_expressionImpl();
    return exclusive_or_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public exclusive_or_expression2 createexclusive_or_expression2()
  {
    exclusive_or_expression2Impl exclusive_or_expression2 = new exclusive_or_expression2Impl();
    return exclusive_or_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public inclusive_or_expression createinclusive_or_expression()
  {
    inclusive_or_expressionImpl inclusive_or_expression = new inclusive_or_expressionImpl();
    return inclusive_or_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public inclusive_or_expression2 createinclusive_or_expression2()
  {
    inclusive_or_expression2Impl inclusive_or_expression2 = new inclusive_or_expression2Impl();
    return inclusive_or_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public logical_and_expression createlogical_and_expression()
  {
    logical_and_expressionImpl logical_and_expression = new logical_and_expressionImpl();
    return logical_and_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public logical_and_expression2 createlogical_and_expression2()
  {
    logical_and_expression2Impl logical_and_expression2 = new logical_and_expression2Impl();
    return logical_and_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public logical_or_expression createlogical_or_expression()
  {
    logical_or_expressionImpl logical_or_expression = new logical_or_expressionImpl();
    return logical_or_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public logical_or_expression2 createlogical_or_expression2()
  {
    logical_or_expression2Impl logical_or_expression2 = new logical_or_expression2Impl();
    return logical_or_expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public conditional_expression createconditional_expression()
  {
    conditional_expressionImpl conditional_expression = new conditional_expressionImpl();
    return conditional_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public assignment_expression createassignment_expression()
  {
    assignment_expressionImpl assignment_expression = new assignment_expressionImpl();
    return assignment_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public assignment_operator createassignment_operator()
  {
    assignment_operatorImpl assignment_operator = new assignment_operatorImpl();
    return assignment_operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression createexpression()
  {
    expressionImpl expression = new expressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression2 createexpression2()
  {
    expression2Impl expression2 = new expression2Impl();
    return expression2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant_expression createconstant_expression()
  {
    constant_expressionImpl constant_expression = new constant_expressionImpl();
    return constant_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration createdeclaration()
  {
    declarationImpl declaration = new declarationImpl();
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_specifiers createdeclaration_specifiers()
  {
    declaration_specifiersImpl declaration_specifiers = new declaration_specifiersImpl();
    return declaration_specifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public init_declarator_list createinit_declarator_list()
  {
    init_declarator_listImpl init_declarator_list = new init_declarator_listImpl();
    return init_declarator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public init_declarator_list2 createinit_declarator_list2()
  {
    init_declarator_list2Impl init_declarator_list2 = new init_declarator_list2Impl();
    return init_declarator_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public init_declarator createinit_declarator()
  {
    init_declaratorImpl init_declarator = new init_declaratorImpl();
    return init_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public storage_class_specifier createstorage_class_specifier()
  {
    storage_class_specifierImpl storage_class_specifier = new storage_class_specifierImpl();
    return storage_class_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_specifier createtype_specifier()
  {
    type_specifierImpl type_specifier = new type_specifierImpl();
    return type_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_or_union_specifier createstruct_or_union_specifier()
  {
    struct_or_union_specifierImpl struct_or_union_specifier = new struct_or_union_specifierImpl();
    return struct_or_union_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_or_union createstruct_or_union()
  {
    struct_or_unionImpl struct_or_union = new struct_or_unionImpl();
    return struct_or_union;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declaration_list createstruct_declaration_list()
  {
    struct_declaration_listImpl struct_declaration_list = new struct_declaration_listImpl();
    return struct_declaration_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declaration_list2 createstruct_declaration_list2()
  {
    struct_declaration_list2Impl struct_declaration_list2 = new struct_declaration_list2Impl();
    return struct_declaration_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declaration createstruct_declaration()
  {
    struct_declarationImpl struct_declaration = new struct_declarationImpl();
    return struct_declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public specifier_qualifier_list createspecifier_qualifier_list()
  {
    specifier_qualifier_listImpl specifier_qualifier_list = new specifier_qualifier_listImpl();
    return specifier_qualifier_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator_list createstruct_declarator_list()
  {
    struct_declarator_listImpl struct_declarator_list = new struct_declarator_listImpl();
    return struct_declarator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator_list2 createstruct_declarator_list2()
  {
    struct_declarator_list2Impl struct_declarator_list2 = new struct_declarator_list2Impl();
    return struct_declarator_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public struct_declarator createstruct_declarator()
  {
    struct_declaratorImpl struct_declarator = new struct_declaratorImpl();
    return struct_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enum_specifier createenum_specifier()
  {
    enum_specifierImpl enum_specifier = new enum_specifierImpl();
    return enum_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enumerator_list createenumerator_list()
  {
    enumerator_listImpl enumerator_list = new enumerator_listImpl();
    return enumerator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enumerator_list2 createenumerator_list2()
  {
    enumerator_list2Impl enumerator_list2 = new enumerator_list2Impl();
    return enumerator_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public enumerator createenumerator()
  {
    enumeratorImpl enumerator = new enumeratorImpl();
    return enumerator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public atomic_type_specifier createatomic_type_specifier()
  {
    atomic_type_specifierImpl atomic_type_specifier = new atomic_type_specifierImpl();
    return atomic_type_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_qualifier createtype_qualifier()
  {
    type_qualifierImpl type_qualifier = new type_qualifierImpl();
    return type_qualifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public function_specifier createfunction_specifier()
  {
    function_specifierImpl function_specifier = new function_specifierImpl();
    return function_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public alignment_specifier createalignment_specifier()
  {
    alignment_specifierImpl alignment_specifier = new alignment_specifierImpl();
    return alignment_specifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declarator createdeclarator()
  {
    declaratorImpl declarator = new declaratorImpl();
    return declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_declarator createdirect_declarator()
  {
    direct_declaratorImpl direct_declarator = new direct_declaratorImpl();
    return direct_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_declarator2 createdirect_declarator2()
  {
    direct_declarator2Impl direct_declarator2 = new direct_declarator2Impl();
    return direct_declarator2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public pointer createpointer()
  {
    pointerImpl pointer = new pointerImpl();
    return pointer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_qualifier_list createtype_qualifier_list()
  {
    type_qualifier_listImpl type_qualifier_list = new type_qualifier_listImpl();
    return type_qualifier_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_qualifier_list2 createtype_qualifier_list2()
  {
    type_qualifier_list2Impl type_qualifier_list2 = new type_qualifier_list2Impl();
    return type_qualifier_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameter_type_list createparameter_type_list()
  {
    parameter_type_listImpl parameter_type_list = new parameter_type_listImpl();
    return parameter_type_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameter_list createparameter_list()
  {
    parameter_listImpl parameter_list = new parameter_listImpl();
    return parameter_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameter_list2 createparameter_list2()
  {
    parameter_list2Impl parameter_list2 = new parameter_list2Impl();
    return parameter_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameter_declaration createparameter_declaration()
  {
    parameter_declarationImpl parameter_declaration = new parameter_declarationImpl();
    return parameter_declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public identifier_list createidentifier_list()
  {
    identifier_listImpl identifier_list = new identifier_listImpl();
    return identifier_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public identifier_list2 createidentifier_list2()
  {
    identifier_list2Impl identifier_list2 = new identifier_list2Impl();
    return identifier_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_name createtype_name()
  {
    type_nameImpl type_name = new type_nameImpl();
    return type_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public abstract_declarator createabstract_declarator()
  {
    abstract_declaratorImpl abstract_declarator = new abstract_declaratorImpl();
    return abstract_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_abstract_declarator createdirect_abstract_declarator()
  {
    direct_abstract_declaratorImpl direct_abstract_declarator = new direct_abstract_declaratorImpl();
    return direct_abstract_declarator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public direct_abstract_declarator2 createdirect_abstract_declarator2()
  {
    direct_abstract_declarator2Impl direct_abstract_declarator2 = new direct_abstract_declarator2Impl();
    return direct_abstract_declarator2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public initializer createinitializer()
  {
    initializerImpl initializer = new initializerImpl();
    return initializer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public initializer_list createinitializer_list()
  {
    initializer_listImpl initializer_list = new initializer_listImpl();
    return initializer_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public initializer_list2 createinitializer_list2()
  {
    initializer_list2Impl initializer_list2 = new initializer_list2Impl();
    return initializer_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public designation createdesignation()
  {
    designationImpl designation = new designationImpl();
    return designation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public designator_list createdesignator_list()
  {
    designator_listImpl designator_list = new designator_listImpl();
    return designator_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public designator_list2 createdesignator_list2()
  {
    designator_list2Impl designator_list2 = new designator_list2Impl();
    return designator_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public designator createdesignator()
  {
    designatorImpl designator = new designatorImpl();
    return designator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static_assert_declaration createstatic_assert_declaration()
  {
    static_assert_declarationImpl static_assert_declaration = new static_assert_declarationImpl();
    return static_assert_declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public statement createstatement()
  {
    statementImpl statement = new statementImpl();
    return statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public labeled_statement createlabeled_statement()
  {
    labeled_statementImpl labeled_statement = new labeled_statementImpl();
    return labeled_statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public compound_statement createcompound_statement()
  {
    compound_statementImpl compound_statement = new compound_statementImpl();
    return compound_statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public block_item createblock_item()
  {
    block_itemImpl block_item = new block_itemImpl();
    return block_item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression_statement createexpression_statement()
  {
    expression_statementImpl expression_statement = new expression_statementImpl();
    return expression_statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public selection_statement createselection_statement()
  {
    selection_statementImpl selection_statement = new selection_statementImpl();
    return selection_statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public iteration_statement createiteration_statement()
  {
    iteration_statementImpl iteration_statement = new iteration_statementImpl();
    return iteration_statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public jump_statement createjump_statement()
  {
    jump_statementImpl jump_statement = new jump_statementImpl();
    return jump_statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public translation_unit createtranslation_unit()
  {
    translation_unitImpl translation_unit = new translation_unitImpl();
    return translation_unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public external_declaration createexternal_declaration()
  {
    external_declarationImpl external_declaration = new external_declarationImpl();
    return external_declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public function_definition createfunction_definition()
  {
    function_definitionImpl function_definition = new function_definitionImpl();
    return function_definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_list createdeclaration_list()
  {
    declaration_listImpl declaration_list = new declaration_listImpl();
    return declaration_list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration_list2 createdeclaration_list2()
  {
    declaration_list2Impl declaration_list2 = new declaration_list2Impl();
    return declaration_list2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public integer createinteger()
  {
    integerImpl integer = new integerImpl();
    return integer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
