/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.doubleType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>double Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.doubleTypeImpl#getDouble_type <em>Double type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class doubleTypeImpl extends type_specifierImpl implements doubleType
{
  /**
   * The default value of the '{@link #getDouble_type() <em>Double type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDouble_type()
   * @generated
   * @ordered
   */
  protected static final String DOUBLE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDouble_type() <em>Double type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDouble_type()
   * @generated
   * @ordered
   */
  protected String double_type = DOUBLE_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected doubleTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DOUBLE_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDouble_type()
  {
    return double_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDouble_type(String newDouble_type)
  {
    String oldDouble_type = double_type;
    double_type = newDouble_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DOUBLE_TYPE__DOUBLE_TYPE, oldDouble_type, double_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DOUBLE_TYPE__DOUBLE_TYPE:
        return getDouble_type();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DOUBLE_TYPE__DOUBLE_TYPE:
        setDouble_type((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DOUBLE_TYPE__DOUBLE_TYPE:
        setDouble_type(DOUBLE_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DOUBLE_TYPE__DOUBLE_TYPE:
        return DOUBLE_TYPE_EDEFAULT == null ? double_type != null : !DOUBLE_TYPE_EDEFAULT.equals(double_type);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (double_type: ");
    result.append(double_type);
    result.append(')');
    return result.toString();
  }

} //doubleTypeImpl
