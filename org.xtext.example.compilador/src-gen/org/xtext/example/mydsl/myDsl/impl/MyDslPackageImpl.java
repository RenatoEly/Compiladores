/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.example.mydsl.myDsl.Model;
import org.xtext.example.mydsl.myDsl.MyDslFactory;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.abstract_declarator;
import org.xtext.example.mydsl.myDsl.alignment_specifier;
import org.xtext.example.mydsl.myDsl.argument_expression_list;
import org.xtext.example.mydsl.myDsl.assignment_expression;
import org.xtext.example.mydsl.myDsl.assignment_operator;
import org.xtext.example.mydsl.myDsl.atomic_type_specifier;
import org.xtext.example.mydsl.myDsl.block_item;
import org.xtext.example.mydsl.myDsl.booleanType;
import org.xtext.example.mydsl.myDsl.charType;
import org.xtext.example.mydsl.myDsl.complexType;
import org.xtext.example.mydsl.myDsl.compound_statement;
import org.xtext.example.mydsl.myDsl.conditional_expression;
import org.xtext.example.mydsl.myDsl.constant;
import org.xtext.example.mydsl.myDsl.constant_expression;
import org.xtext.example.mydsl.myDsl.declaration;
import org.xtext.example.mydsl.myDsl.declaration_list;
import org.xtext.example.mydsl.myDsl.declaration_list2;
import org.xtext.example.mydsl.myDsl.declaration_specifiers;
import org.xtext.example.mydsl.myDsl.declarator;
import org.xtext.example.mydsl.myDsl.designation;
import org.xtext.example.mydsl.myDsl.designator;
import org.xtext.example.mydsl.myDsl.designator_list;
import org.xtext.example.mydsl.myDsl.designator_list2;
import org.xtext.example.mydsl.myDsl.direct_abstract_declarator;
import org.xtext.example.mydsl.myDsl.direct_abstract_declarator2;
import org.xtext.example.mydsl.myDsl.direct_declarator;
import org.xtext.example.mydsl.myDsl.direct_declarator2;
import org.xtext.example.mydsl.myDsl.doubleType;
import org.xtext.example.mydsl.myDsl.enum_specifier;
import org.xtext.example.mydsl.myDsl.enumeration_constant;
import org.xtext.example.mydsl.myDsl.enumerator;
import org.xtext.example.mydsl.myDsl.enumerator_list;
import org.xtext.example.mydsl.myDsl.enumerator_list2;
import org.xtext.example.mydsl.myDsl.expression;
import org.xtext.example.mydsl.myDsl.expression2;
import org.xtext.example.mydsl.myDsl.expression_statement;
import org.xtext.example.mydsl.myDsl.external_declaration;
import org.xtext.example.mydsl.myDsl.floatType;
import org.xtext.example.mydsl.myDsl.function_definition;
import org.xtext.example.mydsl.myDsl.function_specifier;
import org.xtext.example.mydsl.myDsl.generic_assoc_list;
import org.xtext.example.mydsl.myDsl.generic_association;
import org.xtext.example.mydsl.myDsl.generic_selection;
import org.xtext.example.mydsl.myDsl.identifier_list;
import org.xtext.example.mydsl.myDsl.identifier_list2;
import org.xtext.example.mydsl.myDsl.imaginaryType;
import org.xtext.example.mydsl.myDsl.init_declarator;
import org.xtext.example.mydsl.myDsl.init_declarator_list;
import org.xtext.example.mydsl.myDsl.init_declarator_list2;
import org.xtext.example.mydsl.myDsl.initializer;
import org.xtext.example.mydsl.myDsl.initializer_list;
import org.xtext.example.mydsl.myDsl.initializer_list2;
import org.xtext.example.mydsl.myDsl.intType;
import org.xtext.example.mydsl.myDsl.iteration_statement;
import org.xtext.example.mydsl.myDsl.jump_statement;
import org.xtext.example.mydsl.myDsl.labeled_statement;
import org.xtext.example.mydsl.myDsl.longType;
import org.xtext.example.mydsl.myDsl.parameter_declaration;
import org.xtext.example.mydsl.myDsl.parameter_list;
import org.xtext.example.mydsl.myDsl.parameter_list2;
import org.xtext.example.mydsl.myDsl.parameter_type_list;
import org.xtext.example.mydsl.myDsl.pointer;
import org.xtext.example.mydsl.myDsl.postfix_expression;
import org.xtext.example.mydsl.myDsl.postfix_expression2;
import org.xtext.example.mydsl.myDsl.selection_statement;
import org.xtext.example.mydsl.myDsl.shortType;
import org.xtext.example.mydsl.myDsl.signedType;
import org.xtext.example.mydsl.myDsl.simple_expression;
import org.xtext.example.mydsl.myDsl.specifier_qualifier_list;
import org.xtext.example.mydsl.myDsl.statement;
import org.xtext.example.mydsl.myDsl.static_assert_declaration;
import org.xtext.example.mydsl.myDsl.storage_class_specifier;
import org.xtext.example.mydsl.myDsl.stringType;
import org.xtext.example.mydsl.myDsl.string_nova;
import org.xtext.example.mydsl.myDsl.struct_declaration;
import org.xtext.example.mydsl.myDsl.struct_declaration_list;
import org.xtext.example.mydsl.myDsl.struct_declaration_list2;
import org.xtext.example.mydsl.myDsl.struct_declarator;
import org.xtext.example.mydsl.myDsl.struct_declarator_list;
import org.xtext.example.mydsl.myDsl.struct_declarator_list2;
import org.xtext.example.mydsl.myDsl.struct_or_union;
import org.xtext.example.mydsl.myDsl.struct_or_union_specifier;
import org.xtext.example.mydsl.myDsl.translation_unit;
import org.xtext.example.mydsl.myDsl.type_name;
import org.xtext.example.mydsl.myDsl.type_qualifier;
import org.xtext.example.mydsl.myDsl.type_qualifier_list;
import org.xtext.example.mydsl.myDsl.type_qualifier_list2;
import org.xtext.example.mydsl.myDsl.type_specifier;
import org.xtext.example.mydsl.myDsl.unary_expression;
import org.xtext.example.mydsl.myDsl.unsignedType;
import org.xtext.example.mydsl.myDsl.variableRef;
import org.xtext.example.mydsl.myDsl.voidType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslPackageImpl extends EPackageImpl implements MyDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simple_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumeration_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass string_novaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass generic_selectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass generic_assoc_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass generic_associationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass postfix_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass postfix_expression2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argument_expression_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unary_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditional_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignment_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignment_operatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expression2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constant_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaration_specifiersEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass init_declarator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass init_declarator_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass init_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass storage_class_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_or_union_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_or_unionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declaration_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declaration_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specifier_qualifier_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declarator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declarator_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass struct_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enum_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumerator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumerator_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumeratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass atomic_type_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_qualifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass function_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alignment_specifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass direct_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass direct_declarator2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pointerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_qualifier_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_qualifier_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_type_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameter_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identifier_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identifier_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass type_nameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstract_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass direct_abstract_declaratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass direct_abstract_declarator2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializer_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initializer_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designator_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designator_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass designatorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass static_assert_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labeled_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compound_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass block_itemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expression_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selection_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass iteration_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jump_statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass translation_unitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass external_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass function_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaration_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass declaration_list2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass intTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass floatTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mulEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass minusEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shfEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass relEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eqlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass andEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exC_OREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inC_OREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass loG_ANDEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass loG_OREClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass voidTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass charTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass shortTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass longTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass doubleTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass signedTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unsignedTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass complexTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass imaginaryTypeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MyDslPackageImpl()
  {
    super(eNS_URI, MyDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link MyDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MyDslPackage init()
  {
    if (isInited) return (MyDslPackage)EPackage.Registry.INSTANCE.getEPackage(MyDslPackage.eNS_URI);

    // Obtain or create and register package
    MyDslPackageImpl theMyDslPackage = (MyDslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof MyDslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new MyDslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theMyDslPackage.createPackageContents();

    // Initialize created meta-data
    theMyDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMyDslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MyDslPackage.eNS_URI, theMyDslPackage);
    return theMyDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Declaracoes()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getsimple_expression()
  {
    return simple_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsimple_expression_Type_name()
  {
    return (EReference)simple_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getsimple_expression_Cast_expression()
  {
    return (EReference)simple_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getconstant()
  {
    return constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getconstant_I_constant()
  {
    return (EAttribute)constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getconstant_F_constant()
  {
    return (EAttribute)constantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getconstant_Enumt()
  {
    return (EAttribute)constantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getenumeration_constant()
  {
    return enumeration_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getenumeration_constant_Identifier()
  {
    return (EAttribute)enumeration_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstring_nova()
  {
    return string_novaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstring_nova_String_literal()
  {
    return (EAttribute)string_novaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstring_nova_Func_name()
  {
    return (EAttribute)string_novaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getgeneric_selection()
  {
    return generic_selectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getgeneric_selection_Generic()
  {
    return (EAttribute)generic_selectionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getgeneric_selection_Assignment_expression()
  {
    return (EReference)generic_selectionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getgeneric_selection_Generic_assoc_list()
  {
    return (EReference)generic_selectionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getgeneric_assoc_list()
  {
    return generic_assoc_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getgeneric_assoc_list_Generic_association()
  {
    return (EReference)generic_assoc_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getgeneric_assoc_list_Generic_list()
  {
    return (EReference)generic_assoc_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getgeneric_association()
  {
    return generic_associationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getgeneric_association_Type_name()
  {
    return (EReference)generic_associationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getgeneric_association_Assignment_expression()
  {
    return (EReference)generic_associationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getgeneric_association_Default()
  {
    return (EAttribute)generic_associationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpostfix_expression()
  {
    return postfix_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Primary_expression()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Postifx_expres()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Type_name()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression_Initializer_list()
  {
    return (EReference)postfix_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpostfix_expression2()
  {
    return postfix_expression2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpostfix_expression2_Assignment_expression()
  {
    return (EReference)postfix_expression2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getargument_expression_list()
  {
    return argument_expression_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getargument_expression_list_List()
  {
    return (EReference)argument_expression_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getunary_expression()
  {
    return unary_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getunary_expression_Postfix_expression()
  {
    return (EReference)unary_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunary_expression_Inc_op()
  {
    return (EAttribute)unary_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getunary_expression_Unary_expression()
  {
    return (EReference)unary_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunary_expression_Dec_op()
  {
    return (EAttribute)unary_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunary_expression_Unary_operator()
  {
    return (EAttribute)unary_expressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunary_expression_Sizeof()
  {
    return (EAttribute)unary_expressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunary_expression_Alignof()
  {
    return (EAttribute)unary_expressionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getconditional_expression()
  {
    return conditional_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconditional_expression_Simple_expression()
  {
    return (EReference)conditional_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconditional_expression_Logical_or_expression()
  {
    return (EReference)conditional_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconditional_expression_Expression()
  {
    return (EReference)conditional_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconditional_expression_Conditional_expression()
  {
    return (EReference)conditional_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getassignment_expression()
  {
    return assignment_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getassignment_expression_Conditional_expression()
  {
    return (EReference)assignment_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getassignment_expression_Unary_expression()
  {
    return (EReference)assignment_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getassignment_expression_Assignment_operator()
  {
    return (EReference)assignment_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getassignment_expression_Assignment_expression()
  {
    return (EReference)assignment_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getassignment_operator()
  {
    return assignment_operatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Mul_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Div_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Mod_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Add_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Sub_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Left_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Right_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_And_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Xor_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getassignment_operator_Or_assign()
  {
    return (EAttribute)assignment_operatorEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpression_Expression2()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexpression2()
  {
    return expression2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpression2_Assignment_expression()
  {
    return (EReference)expression2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpression2_Expression2()
  {
    return (EReference)expression2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getconstant_expression()
  {
    return constant_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getconstant_expression_Conditional_expression()
  {
    return (EReference)constant_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration()
  {
    return declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_Declaration_specifiers()
  {
    return (EReference)declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_Init_declarator_list()
  {
    return (EReference)declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_Static_assert_declaration()
  {
    return (EReference)declarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration_specifiers()
  {
    return declaration_specifiersEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_Storage_class_specifier()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_Declaration_specifiers()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_Type_specifier()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_Type_qualifier()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_Function_specifier()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_specifiers_Alignment_specifier()
  {
    return (EReference)declaration_specifiersEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinit_declarator_list()
  {
    return init_declarator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_list_Init_declarator()
  {
    return (EReference)init_declarator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_list_Init_declarator_list2()
  {
    return (EReference)init_declarator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinit_declarator_list2()
  {
    return init_declarator_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_list2_Init_declarator()
  {
    return (EReference)init_declarator_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_list2_Init_declarator_list2()
  {
    return (EReference)init_declarator_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinit_declarator()
  {
    return init_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_Declarator()
  {
    return (EReference)init_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinit_declarator_Initializer()
  {
    return (EReference)init_declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstorage_class_specifier()
  {
    return storage_class_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstorage_class_specifier_Typedef()
  {
    return (EAttribute)storage_class_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstorage_class_specifier_Extern()
  {
    return (EAttribute)storage_class_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstorage_class_specifier_Static()
  {
    return (EAttribute)storage_class_specifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstorage_class_specifier_Thread_local()
  {
    return (EAttribute)storage_class_specifierEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstorage_class_specifier_Auto()
  {
    return (EAttribute)storage_class_specifierEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstorage_class_specifier_Register()
  {
    return (EAttribute)storage_class_specifierEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_specifier()
  {
    return type_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_specifier_Atomic_type_specifier()
  {
    return (EReference)type_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_specifier_Struct_or_union_specifier()
  {
    return (EReference)type_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_specifier_Enum_specifier()
  {
    return (EReference)type_specifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_specifier_Typedef_name()
  {
    return (EAttribute)type_specifierEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_or_union_specifier()
  {
    return struct_or_union_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_or_union_specifier_Struct_or_union()
  {
    return (EReference)struct_or_union_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_or_union_specifier_Struct_declaration_list()
  {
    return (EReference)struct_or_union_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstruct_or_union_specifier_Identifier()
  {
    return (EAttribute)struct_or_union_specifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_or_union()
  {
    return struct_or_unionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstruct_or_union_Struct()
  {
    return (EAttribute)struct_or_unionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstruct_or_union_Union()
  {
    return (EAttribute)struct_or_unionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declaration_list()
  {
    return struct_declaration_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_list_Struct_declaration()
  {
    return (EReference)struct_declaration_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_list_Struct_declaration_list2()
  {
    return (EReference)struct_declaration_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declaration_list2()
  {
    return struct_declaration_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_list2_Struct_declaration()
  {
    return (EReference)struct_declaration_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_list2_Struct_declaration_list2()
  {
    return (EReference)struct_declaration_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declaration()
  {
    return struct_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_Specifier_qualifier_list()
  {
    return (EReference)struct_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_Struct_declarator_list()
  {
    return (EReference)struct_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declaration_Static_assert_declaration()
  {
    return (EReference)struct_declarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getspecifier_qualifier_list()
  {
    return specifier_qualifier_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getspecifier_qualifier_list_Type_specifier()
  {
    return (EReference)specifier_qualifier_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getspecifier_qualifier_list_Specifier_qualifier_list()
  {
    return (EReference)specifier_qualifier_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getspecifier_qualifier_list_Type_qualifier()
  {
    return (EReference)specifier_qualifier_listEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declarator_list()
  {
    return struct_declarator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_list_Struct_declarator()
  {
    return (EReference)struct_declarator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_list_Struct_declarator_list2()
  {
    return (EReference)struct_declarator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declarator_list2()
  {
    return struct_declarator_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_list2_Struct_declarator()
  {
    return (EReference)struct_declarator_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_list2_Struct_declarator_list2()
  {
    return (EReference)struct_declarator_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstruct_declarator()
  {
    return struct_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_Constant_expression()
  {
    return (EReference)struct_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstruct_declarator_Declarator()
  {
    return (EReference)struct_declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getenum_specifier()
  {
    return enum_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getenum_specifier_Enumt()
  {
    return (EAttribute)enum_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenum_specifier_Enumerator_list()
  {
    return (EReference)enum_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getenum_specifier_Identifier()
  {
    return (EAttribute)enum_specifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getenumerator_list()
  {
    return enumerator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenumerator_list_Enumerator()
  {
    return (EReference)enumerator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenumerator_list_Enumerator_list2()
  {
    return (EReference)enumerator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getenumerator_list2()
  {
    return enumerator_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenumerator_list2_Enumerator()
  {
    return (EReference)enumerator_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenumerator_list2_Enumerator_list2()
  {
    return (EReference)enumerator_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getenumerator()
  {
    return enumeratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenumerator_Enumeration_constant()
  {
    return (EReference)enumeratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getenumerator_Constant_expression()
  {
    return (EReference)enumeratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getatomic_type_specifier()
  {
    return atomic_type_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getatomic_type_specifier_Atomic()
  {
    return (EAttribute)atomic_type_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getatomic_type_specifier_Type_name()
  {
    return (EReference)atomic_type_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_qualifier()
  {
    return type_qualifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_qualifier_Const()
  {
    return (EAttribute)type_qualifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_qualifier_Restrict()
  {
    return (EAttribute)type_qualifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_qualifier_Volatile()
  {
    return (EAttribute)type_qualifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettype_qualifier_Atomic()
  {
    return (EAttribute)type_qualifierEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfunction_specifier()
  {
    return function_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfunction_specifier_Inline()
  {
    return (EAttribute)function_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfunction_specifier_Noreturn()
  {
    return (EAttribute)function_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getalignment_specifier()
  {
    return alignment_specifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getalignment_specifier_Alignas()
  {
    return (EAttribute)alignment_specifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getalignment_specifier_Type_name()
  {
    return (EReference)alignment_specifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getalignment_specifier_Constant_expression()
  {
    return (EReference)alignment_specifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclarator()
  {
    return declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclarator_Pointer()
  {
    return (EReference)declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclarator_Direct_declarator()
  {
    return (EReference)declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdirect_declarator()
  {
    return direct_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdirect_declarator_Name()
  {
    return (EAttribute)direct_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator_Direct_declarators()
  {
    return (EReference)direct_declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator_Declarator()
  {
    return (EReference)direct_declaratorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdirect_declarator2()
  {
    return direct_declarator2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator2_Declarators()
  {
    return (EReference)direct_declarator2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdirect_declarator2_Static()
  {
    return (EAttribute)direct_declarator2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator2_Type_qualifier_list()
  {
    return (EReference)direct_declarator2EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator2_Assignment_expression()
  {
    return (EReference)direct_declarator2EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator2_Parameter_type_list()
  {
    return (EReference)direct_declarator2EClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_declarator2_Identifier_list()
  {
    return (EReference)direct_declarator2EClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getpointer()
  {
    return pointerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpointer_Type_qualifier_list()
  {
    return (EReference)pointerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getpointer_Pointer()
  {
    return (EReference)pointerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_qualifier_list()
  {
    return type_qualifier_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_qualifier_list_Type_qualifier()
  {
    return (EReference)type_qualifier_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_qualifier_list_Type_qualifier_list2()
  {
    return (EReference)type_qualifier_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_qualifier_list2()
  {
    return type_qualifier_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_qualifier_list2_Type_qualifier()
  {
    return (EReference)type_qualifier_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_qualifier_list2_Type_qualifier_list2()
  {
    return (EReference)type_qualifier_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_type_list()
  {
    return parameter_type_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_type_list_Parameter_list()
  {
    return (EReference)parameter_type_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getparameter_type_list_Ellipsis()
  {
    return (EAttribute)parameter_type_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_list()
  {
    return parameter_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_list_Parameter_declaration()
  {
    return (EReference)parameter_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_list_Parameter_list2()
  {
    return (EReference)parameter_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_list2()
  {
    return parameter_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_list2_Parameter_declaration()
  {
    return (EReference)parameter_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_list2_Parameter_list2()
  {
    return (EReference)parameter_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameter_declaration()
  {
    return parameter_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Declaration_specifiers()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Declarator()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameter_declaration_Abstract_declarator()
  {
    return (EReference)parameter_declarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getidentifier_list()
  {
    return identifier_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getidentifier_list_Identifier()
  {
    return (EAttribute)identifier_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getidentifier_list_Identifier_list2()
  {
    return (EReference)identifier_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getidentifier_list2()
  {
    return identifier_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getidentifier_list2_Identifier()
  {
    return (EAttribute)identifier_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getidentifier_list2_Identifier_list2()
  {
    return (EReference)identifier_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettype_name()
  {
    return type_nameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_name_Specifier_qualifier_list()
  {
    return (EReference)type_nameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettype_name_Abstract_declarator()
  {
    return (EReference)type_nameEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getabstract_declarator()
  {
    return abstract_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getabstract_declarator_Pointer()
  {
    return (EReference)abstract_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getabstract_declarator_Direct_abstract_declarator()
  {
    return (EReference)abstract_declaratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdirect_abstract_declarator()
  {
    return direct_abstract_declaratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_abstract_declarator_Direct_abstract_declarator2()
  {
    return (EReference)direct_abstract_declaratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdirect_abstract_declarator2()
  {
    return direct_abstract_declarator2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdirect_abstract_declarator2_Static()
  {
    return (EAttribute)direct_abstract_declarator2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_abstract_declarator2_Type_qualifier_list()
  {
    return (EReference)direct_abstract_declarator2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_abstract_declarator2_Assignment_expression()
  {
    return (EReference)direct_abstract_declarator2EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdirect_abstract_declarator2_Parameter_type_list()
  {
    return (EReference)direct_abstract_declarator2EClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinitializer()
  {
    return initializerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_Initializer_list()
  {
    return (EReference)initializerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_Assignment_expression()
  {
    return (EReference)initializerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinitializer_list()
  {
    return initializer_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Designation()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Initializer()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list_Initializer_list2()
  {
    return (EReference)initializer_listEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinitializer_list2()
  {
    return initializer_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list2_Designation()
  {
    return (EReference)initializer_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list2_Initializer()
  {
    return (EReference)initializer_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getinitializer_list2_Initializer_list2()
  {
    return (EReference)initializer_list2EClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignation()
  {
    return designationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignation_Designator_list()
  {
    return (EReference)designationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignator_list()
  {
    return designator_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_list_Designator()
  {
    return (EReference)designator_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_list_Designator_list2()
  {
    return (EReference)designator_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignator_list2()
  {
    return designator_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_list2_Designator()
  {
    return (EReference)designator_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_list2_Designator_list2()
  {
    return (EReference)designator_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdesignator()
  {
    return designatorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdesignator_Constant_expression()
  {
    return (EReference)designatorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdesignator_Identifier()
  {
    return (EAttribute)designatorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstatic_assert_declaration()
  {
    return static_assert_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstatic_assert_declaration_Static_assert()
  {
    return (EAttribute)static_assert_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatic_assert_declaration_Constant_expression()
  {
    return (EReference)static_assert_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getstatic_assert_declaration_String_literal()
  {
    return (EAttribute)static_assert_declarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatement_Labeled_statement()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatement_Compound_statement()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatement_Expression_statement()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatement_Selection_statement()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatement_Iteration_statement()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstatement_Jump_statement()
  {
    return (EReference)statementEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlabeled_statement()
  {
    return labeled_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlabeled_statement_Identifier()
  {
    return (EAttribute)labeled_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlabeled_statement_Statement()
  {
    return (EReference)labeled_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlabeled_statement_Case()
  {
    return (EAttribute)labeled_statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getlabeled_statement_Constant_expression()
  {
    return (EReference)labeled_statementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlabeled_statement_Default()
  {
    return (EAttribute)labeled_statementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcompound_statement()
  {
    return compound_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcompound_statement_Block_item_list()
  {
    return (EReference)compound_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getblock_item()
  {
    return block_itemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getblock_item_Declaration()
  {
    return (EReference)block_itemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getblock_item_Statement()
  {
    return (EReference)block_itemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexpression_statement()
  {
    return expression_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexpression_statement_Expression()
  {
    return (EReference)expression_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getselection_statement()
  {
    return selection_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getselection_statement_If()
  {
    return (EAttribute)selection_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getselection_statement_Expression()
  {
    return (EReference)selection_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getselection_statement_Statement()
  {
    return (EReference)selection_statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getselection_statement_Else()
  {
    return (EAttribute)selection_statementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getselection_statement_Statement2()
  {
    return (EReference)selection_statementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getselection_statement_Switch()
  {
    return (EAttribute)selection_statementEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getiteration_statement()
  {
    return iteration_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getiteration_statement_While()
  {
    return (EAttribute)iteration_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Expression()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Statement()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getiteration_statement_Do()
  {
    return (EAttribute)iteration_statementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getiteration_statement_For()
  {
    return (EAttribute)iteration_statementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Expression_statement()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Expression_statement2()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getiteration_statement_Declaration()
  {
    return (EReference)iteration_statementEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getjump_statement()
  {
    return jump_statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getjump_statement_Goto()
  {
    return (EAttribute)jump_statementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getjump_statement_Identifier()
  {
    return (EAttribute)jump_statementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getjump_statement_Continue()
  {
    return (EAttribute)jump_statementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getjump_statement_Break()
  {
    return (EAttribute)jump_statementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getjump_statement_Return()
  {
    return (EAttribute)jump_statementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getjump_statement_Expression()
  {
    return (EReference)jump_statementEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettranslation_unit()
  {
    return translation_unitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettranslation_unit_External_declaration()
  {
    return (EReference)translation_unitEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getexternal_declaration()
  {
    return external_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexternal_declaration_Function_definition()
  {
    return (EReference)external_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getexternal_declaration_Declaration()
  {
    return (EReference)external_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfunction_definition()
  {
    return function_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Declaration_specifiers()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Declarator()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Declaration_list()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfunction_definition_Compound_statement()
  {
    return (EReference)function_definitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration_list()
  {
    return declaration_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_list_Declaration()
  {
    return (EReference)declaration_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_list_Declaration_list_2()
  {
    return (EReference)declaration_listEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeclaration_list2()
  {
    return declaration_list2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_list2_Declaration()
  {
    return (EReference)declaration_list2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getdeclaration_list2_Declaration_list2()
  {
    return (EReference)declaration_list2EClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getvariableRef()
  {
    return variableRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvariableRef_Variable()
  {
    return (EAttribute)variableRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getintType()
  {
    return intTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getintType_Value()
  {
    return (EAttribute)intTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getintType_Int_type()
  {
    return (EAttribute)intTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfloatType()
  {
    return floatTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfloatType_Value()
  {
    return (EAttribute)floatTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfloatType_Float_type()
  {
    return (EAttribute)floatTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getstringType()
  {
    return stringTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getstringType_Value()
  {
    return (EReference)stringTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getbooleanType()
  {
    return booleanTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getbooleanType_Value()
  {
    return (EAttribute)booleanTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getbooleanType_Bool_type()
  {
    return (EAttribute)booleanTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMUL()
  {
    return mulEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMUL_Left()
  {
    return (EReference)mulEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMUL_Op()
  {
    return (EAttribute)mulEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMUL_Right()
  {
    return (EReference)mulEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getADD()
  {
    return addEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADD_Left()
  {
    return (EReference)addEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getADD_Right()
  {
    return (EReference)addEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMINUS()
  {
    return minusEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMINUS_Left()
  {
    return (EReference)minusEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMINUS_Right()
  {
    return (EReference)minusEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSHF()
  {
    return shfEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSHF_Left()
  {
    return (EReference)shfEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSHF_Op()
  {
    return (EAttribute)shfEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSHF_Right()
  {
    return (EReference)shfEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getREL()
  {
    return relEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getREL_Left()
  {
    return (EReference)relEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getREL_Op()
  {
    return (EAttribute)relEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getREL_Right()
  {
    return (EReference)relEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEQL()
  {
    return eqlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEQL_Left()
  {
    return (EReference)eqlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getEQL_Op()
  {
    return (EAttribute)eqlEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEQL_Right()
  {
    return (EReference)eqlEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAND()
  {
    return andEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAND_Left()
  {
    return (EReference)andEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getAND_Right()
  {
    return (EReference)andEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getEXC_OR()
  {
    return exC_OREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEXC_OR_Left()
  {
    return (EReference)exC_OREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getEXC_OR_Right()
  {
    return (EReference)exC_OREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getINC_OR()
  {
    return inC_OREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getINC_OR_Left()
  {
    return (EReference)inC_OREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getINC_OR_Right()
  {
    return (EReference)inC_OREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLOG_AND()
  {
    return loG_ANDEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLOG_AND_Left()
  {
    return (EReference)loG_ANDEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLOG_AND_Right()
  {
    return (EReference)loG_ANDEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLOG_OR()
  {
    return loG_OREClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLOG_OR_Left()
  {
    return (EReference)loG_OREClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLOG_OR_Right()
  {
    return (EReference)loG_OREClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getvoidType()
  {
    return voidTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getvoidType_Void_type()
  {
    return (EAttribute)voidTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcharType()
  {
    return charTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcharType_Char_type()
  {
    return (EAttribute)charTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getshortType()
  {
    return shortTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getshortType_Short_type()
  {
    return (EAttribute)shortTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getlongType()
  {
    return longTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getlongType_Long_type()
  {
    return (EAttribute)longTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdoubleType()
  {
    return doubleTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdoubleType_Double_type()
  {
    return (EAttribute)doubleTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getsignedType()
  {
    return signedTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getsignedType_Signed_type()
  {
    return (EAttribute)signedTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getunsignedType()
  {
    return unsignedTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getunsignedType_Unsigned_type()
  {
    return (EAttribute)unsignedTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcomplexType()
  {
    return complexTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcomplexType_Complex_type()
  {
    return (EAttribute)complexTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getimaginaryType()
  {
    return imaginaryTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getimaginaryType_Imaginary_type()
  {
    return (EAttribute)imaginaryTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactory getMyDslFactory()
  {
    return (MyDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__DECLARACOES);

    simple_expressionEClass = createEClass(SIMPLE_EXPRESSION);
    createEReference(simple_expressionEClass, SIMPLE_EXPRESSION__TYPE_NAME);
    createEReference(simple_expressionEClass, SIMPLE_EXPRESSION__CAST_EXPRESSION);

    constantEClass = createEClass(CONSTANT);
    createEAttribute(constantEClass, CONSTANT__ICONSTANT);
    createEAttribute(constantEClass, CONSTANT__FCONSTANT);
    createEAttribute(constantEClass, CONSTANT__ENUMT);

    enumeration_constantEClass = createEClass(ENUMERATION_CONSTANT);
    createEAttribute(enumeration_constantEClass, ENUMERATION_CONSTANT__IDENTIFIER);

    string_novaEClass = createEClass(STRING_NOVA);
    createEAttribute(string_novaEClass, STRING_NOVA__STRING_LITERAL);
    createEAttribute(string_novaEClass, STRING_NOVA__FUNC_NAME);

    generic_selectionEClass = createEClass(GENERIC_SELECTION);
    createEAttribute(generic_selectionEClass, GENERIC_SELECTION__GENERIC);
    createEReference(generic_selectionEClass, GENERIC_SELECTION__ASSIGNMENT_EXPRESSION);
    createEReference(generic_selectionEClass, GENERIC_SELECTION__GENERIC_ASSOC_LIST);

    generic_assoc_listEClass = createEClass(GENERIC_ASSOC_LIST);
    createEReference(generic_assoc_listEClass, GENERIC_ASSOC_LIST__GENERIC_ASSOCIATION);
    createEReference(generic_assoc_listEClass, GENERIC_ASSOC_LIST__GENERIC_LIST);

    generic_associationEClass = createEClass(GENERIC_ASSOCIATION);
    createEReference(generic_associationEClass, GENERIC_ASSOCIATION__TYPE_NAME);
    createEReference(generic_associationEClass, GENERIC_ASSOCIATION__ASSIGNMENT_EXPRESSION);
    createEAttribute(generic_associationEClass, GENERIC_ASSOCIATION__DEFAULT);

    postfix_expressionEClass = createEClass(POSTFIX_EXPRESSION);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__PRIMARY_EXPRESSION);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__POSTIFX_EXPRES);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__TYPE_NAME);
    createEReference(postfix_expressionEClass, POSTFIX_EXPRESSION__INITIALIZER_LIST);

    postfix_expression2EClass = createEClass(POSTFIX_EXPRESSION2);
    createEReference(postfix_expression2EClass, POSTFIX_EXPRESSION2__ASSIGNMENT_EXPRESSION);

    argument_expression_listEClass = createEClass(ARGUMENT_EXPRESSION_LIST);
    createEReference(argument_expression_listEClass, ARGUMENT_EXPRESSION_LIST__LIST);

    unary_expressionEClass = createEClass(UNARY_EXPRESSION);
    createEReference(unary_expressionEClass, UNARY_EXPRESSION__POSTFIX_EXPRESSION);
    createEAttribute(unary_expressionEClass, UNARY_EXPRESSION__INC_OP);
    createEReference(unary_expressionEClass, UNARY_EXPRESSION__UNARY_EXPRESSION);
    createEAttribute(unary_expressionEClass, UNARY_EXPRESSION__DEC_OP);
    createEAttribute(unary_expressionEClass, UNARY_EXPRESSION__UNARY_OPERATOR);
    createEAttribute(unary_expressionEClass, UNARY_EXPRESSION__SIZEOF);
    createEAttribute(unary_expressionEClass, UNARY_EXPRESSION__ALIGNOF);

    conditional_expressionEClass = createEClass(CONDITIONAL_EXPRESSION);
    createEReference(conditional_expressionEClass, CONDITIONAL_EXPRESSION__SIMPLE_EXPRESSION);
    createEReference(conditional_expressionEClass, CONDITIONAL_EXPRESSION__LOGICAL_OR_EXPRESSION);
    createEReference(conditional_expressionEClass, CONDITIONAL_EXPRESSION__EXPRESSION);
    createEReference(conditional_expressionEClass, CONDITIONAL_EXPRESSION__CONDITIONAL_EXPRESSION);

    assignment_expressionEClass = createEClass(ASSIGNMENT_EXPRESSION);
    createEReference(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__CONDITIONAL_EXPRESSION);
    createEReference(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__UNARY_EXPRESSION);
    createEReference(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__ASSIGNMENT_OPERATOR);
    createEReference(assignment_expressionEClass, ASSIGNMENT_EXPRESSION__ASSIGNMENT_EXPRESSION);

    assignment_operatorEClass = createEClass(ASSIGNMENT_OPERATOR);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__MUL_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__DIV_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__MOD_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__ADD_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__SUB_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__LEFT_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__RIGHT_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__AND_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__XOR_ASSIGN);
    createEAttribute(assignment_operatorEClass, ASSIGNMENT_OPERATOR__OR_ASSIGN);

    expressionEClass = createEClass(EXPRESSION);
    createEReference(expressionEClass, EXPRESSION__EXPRESSION2);

    expression2EClass = createEClass(EXPRESSION2);
    createEReference(expression2EClass, EXPRESSION2__ASSIGNMENT_EXPRESSION);
    createEReference(expression2EClass, EXPRESSION2__EXPRESSION2);

    constant_expressionEClass = createEClass(CONSTANT_EXPRESSION);
    createEReference(constant_expressionEClass, CONSTANT_EXPRESSION__CONDITIONAL_EXPRESSION);

    declarationEClass = createEClass(DECLARATION);
    createEReference(declarationEClass, DECLARATION__DECLARATION_SPECIFIERS);
    createEReference(declarationEClass, DECLARATION__INIT_DECLARATOR_LIST);
    createEReference(declarationEClass, DECLARATION__STATIC_ASSERT_DECLARATION);

    declaration_specifiersEClass = createEClass(DECLARATION_SPECIFIERS);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__STORAGE_CLASS_SPECIFIER);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__DECLARATION_SPECIFIERS);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__TYPE_SPECIFIER);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__TYPE_QUALIFIER);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__FUNCTION_SPECIFIER);
    createEReference(declaration_specifiersEClass, DECLARATION_SPECIFIERS__ALIGNMENT_SPECIFIER);

    init_declarator_listEClass = createEClass(INIT_DECLARATOR_LIST);
    createEReference(init_declarator_listEClass, INIT_DECLARATOR_LIST__INIT_DECLARATOR);
    createEReference(init_declarator_listEClass, INIT_DECLARATOR_LIST__INIT_DECLARATOR_LIST2);

    init_declarator_list2EClass = createEClass(INIT_DECLARATOR_LIST2);
    createEReference(init_declarator_list2EClass, INIT_DECLARATOR_LIST2__INIT_DECLARATOR);
    createEReference(init_declarator_list2EClass, INIT_DECLARATOR_LIST2__INIT_DECLARATOR_LIST2);

    init_declaratorEClass = createEClass(INIT_DECLARATOR);
    createEReference(init_declaratorEClass, INIT_DECLARATOR__DECLARATOR);
    createEReference(init_declaratorEClass, INIT_DECLARATOR__INITIALIZER);

    storage_class_specifierEClass = createEClass(STORAGE_CLASS_SPECIFIER);
    createEAttribute(storage_class_specifierEClass, STORAGE_CLASS_SPECIFIER__TYPEDEF);
    createEAttribute(storage_class_specifierEClass, STORAGE_CLASS_SPECIFIER__EXTERN);
    createEAttribute(storage_class_specifierEClass, STORAGE_CLASS_SPECIFIER__STATIC);
    createEAttribute(storage_class_specifierEClass, STORAGE_CLASS_SPECIFIER__THREAD_LOCAL);
    createEAttribute(storage_class_specifierEClass, STORAGE_CLASS_SPECIFIER__AUTO);
    createEAttribute(storage_class_specifierEClass, STORAGE_CLASS_SPECIFIER__REGISTER);

    type_specifierEClass = createEClass(TYPE_SPECIFIER);
    createEReference(type_specifierEClass, TYPE_SPECIFIER__ATOMIC_TYPE_SPECIFIER);
    createEReference(type_specifierEClass, TYPE_SPECIFIER__STRUCT_OR_UNION_SPECIFIER);
    createEReference(type_specifierEClass, TYPE_SPECIFIER__ENUM_SPECIFIER);
    createEAttribute(type_specifierEClass, TYPE_SPECIFIER__TYPEDEF_NAME);

    struct_or_union_specifierEClass = createEClass(STRUCT_OR_UNION_SPECIFIER);
    createEReference(struct_or_union_specifierEClass, STRUCT_OR_UNION_SPECIFIER__STRUCT_OR_UNION);
    createEReference(struct_or_union_specifierEClass, STRUCT_OR_UNION_SPECIFIER__STRUCT_DECLARATION_LIST);
    createEAttribute(struct_or_union_specifierEClass, STRUCT_OR_UNION_SPECIFIER__IDENTIFIER);

    struct_or_unionEClass = createEClass(STRUCT_OR_UNION);
    createEAttribute(struct_or_unionEClass, STRUCT_OR_UNION__STRUCT);
    createEAttribute(struct_or_unionEClass, STRUCT_OR_UNION__UNION);

    struct_declaration_listEClass = createEClass(STRUCT_DECLARATION_LIST);
    createEReference(struct_declaration_listEClass, STRUCT_DECLARATION_LIST__STRUCT_DECLARATION);
    createEReference(struct_declaration_listEClass, STRUCT_DECLARATION_LIST__STRUCT_DECLARATION_LIST2);

    struct_declaration_list2EClass = createEClass(STRUCT_DECLARATION_LIST2);
    createEReference(struct_declaration_list2EClass, STRUCT_DECLARATION_LIST2__STRUCT_DECLARATION);
    createEReference(struct_declaration_list2EClass, STRUCT_DECLARATION_LIST2__STRUCT_DECLARATION_LIST2);

    struct_declarationEClass = createEClass(STRUCT_DECLARATION);
    createEReference(struct_declarationEClass, STRUCT_DECLARATION__SPECIFIER_QUALIFIER_LIST);
    createEReference(struct_declarationEClass, STRUCT_DECLARATION__STRUCT_DECLARATOR_LIST);
    createEReference(struct_declarationEClass, STRUCT_DECLARATION__STATIC_ASSERT_DECLARATION);

    specifier_qualifier_listEClass = createEClass(SPECIFIER_QUALIFIER_LIST);
    createEReference(specifier_qualifier_listEClass, SPECIFIER_QUALIFIER_LIST__TYPE_SPECIFIER);
    createEReference(specifier_qualifier_listEClass, SPECIFIER_QUALIFIER_LIST__SPECIFIER_QUALIFIER_LIST);
    createEReference(specifier_qualifier_listEClass, SPECIFIER_QUALIFIER_LIST__TYPE_QUALIFIER);

    struct_declarator_listEClass = createEClass(STRUCT_DECLARATOR_LIST);
    createEReference(struct_declarator_listEClass, STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR);
    createEReference(struct_declarator_listEClass, STRUCT_DECLARATOR_LIST__STRUCT_DECLARATOR_LIST2);

    struct_declarator_list2EClass = createEClass(STRUCT_DECLARATOR_LIST2);
    createEReference(struct_declarator_list2EClass, STRUCT_DECLARATOR_LIST2__STRUCT_DECLARATOR);
    createEReference(struct_declarator_list2EClass, STRUCT_DECLARATOR_LIST2__STRUCT_DECLARATOR_LIST2);

    struct_declaratorEClass = createEClass(STRUCT_DECLARATOR);
    createEReference(struct_declaratorEClass, STRUCT_DECLARATOR__CONSTANT_EXPRESSION);
    createEReference(struct_declaratorEClass, STRUCT_DECLARATOR__DECLARATOR);

    enum_specifierEClass = createEClass(ENUM_SPECIFIER);
    createEAttribute(enum_specifierEClass, ENUM_SPECIFIER__ENUMT);
    createEReference(enum_specifierEClass, ENUM_SPECIFIER__ENUMERATOR_LIST);
    createEAttribute(enum_specifierEClass, ENUM_SPECIFIER__IDENTIFIER);

    enumerator_listEClass = createEClass(ENUMERATOR_LIST);
    createEReference(enumerator_listEClass, ENUMERATOR_LIST__ENUMERATOR);
    createEReference(enumerator_listEClass, ENUMERATOR_LIST__ENUMERATOR_LIST2);

    enumerator_list2EClass = createEClass(ENUMERATOR_LIST2);
    createEReference(enumerator_list2EClass, ENUMERATOR_LIST2__ENUMERATOR);
    createEReference(enumerator_list2EClass, ENUMERATOR_LIST2__ENUMERATOR_LIST2);

    enumeratorEClass = createEClass(ENUMERATOR);
    createEReference(enumeratorEClass, ENUMERATOR__ENUMERATION_CONSTANT);
    createEReference(enumeratorEClass, ENUMERATOR__CONSTANT_EXPRESSION);

    atomic_type_specifierEClass = createEClass(ATOMIC_TYPE_SPECIFIER);
    createEAttribute(atomic_type_specifierEClass, ATOMIC_TYPE_SPECIFIER__ATOMIC);
    createEReference(atomic_type_specifierEClass, ATOMIC_TYPE_SPECIFIER__TYPE_NAME);

    type_qualifierEClass = createEClass(TYPE_QUALIFIER);
    createEAttribute(type_qualifierEClass, TYPE_QUALIFIER__CONST);
    createEAttribute(type_qualifierEClass, TYPE_QUALIFIER__RESTRICT);
    createEAttribute(type_qualifierEClass, TYPE_QUALIFIER__VOLATILE);
    createEAttribute(type_qualifierEClass, TYPE_QUALIFIER__ATOMIC);

    function_specifierEClass = createEClass(FUNCTION_SPECIFIER);
    createEAttribute(function_specifierEClass, FUNCTION_SPECIFIER__INLINE);
    createEAttribute(function_specifierEClass, FUNCTION_SPECIFIER__NORETURN);

    alignment_specifierEClass = createEClass(ALIGNMENT_SPECIFIER);
    createEAttribute(alignment_specifierEClass, ALIGNMENT_SPECIFIER__ALIGNAS);
    createEReference(alignment_specifierEClass, ALIGNMENT_SPECIFIER__TYPE_NAME);
    createEReference(alignment_specifierEClass, ALIGNMENT_SPECIFIER__CONSTANT_EXPRESSION);

    declaratorEClass = createEClass(DECLARATOR);
    createEReference(declaratorEClass, DECLARATOR__POINTER);
    createEReference(declaratorEClass, DECLARATOR__DIRECT_DECLARATOR);

    direct_declaratorEClass = createEClass(DIRECT_DECLARATOR);
    createEAttribute(direct_declaratorEClass, DIRECT_DECLARATOR__NAME);
    createEReference(direct_declaratorEClass, DIRECT_DECLARATOR__DIRECT_DECLARATORS);
    createEReference(direct_declaratorEClass, DIRECT_DECLARATOR__DECLARATOR);

    direct_declarator2EClass = createEClass(DIRECT_DECLARATOR2);
    createEReference(direct_declarator2EClass, DIRECT_DECLARATOR2__DECLARATORS);
    createEAttribute(direct_declarator2EClass, DIRECT_DECLARATOR2__STATIC);
    createEReference(direct_declarator2EClass, DIRECT_DECLARATOR2__TYPE_QUALIFIER_LIST);
    createEReference(direct_declarator2EClass, DIRECT_DECLARATOR2__ASSIGNMENT_EXPRESSION);
    createEReference(direct_declarator2EClass, DIRECT_DECLARATOR2__PARAMETER_TYPE_LIST);
    createEReference(direct_declarator2EClass, DIRECT_DECLARATOR2__IDENTIFIER_LIST);

    pointerEClass = createEClass(POINTER);
    createEReference(pointerEClass, POINTER__TYPE_QUALIFIER_LIST);
    createEReference(pointerEClass, POINTER__POINTER);

    type_qualifier_listEClass = createEClass(TYPE_QUALIFIER_LIST);
    createEReference(type_qualifier_listEClass, TYPE_QUALIFIER_LIST__TYPE_QUALIFIER);
    createEReference(type_qualifier_listEClass, TYPE_QUALIFIER_LIST__TYPE_QUALIFIER_LIST2);

    type_qualifier_list2EClass = createEClass(TYPE_QUALIFIER_LIST2);
    createEReference(type_qualifier_list2EClass, TYPE_QUALIFIER_LIST2__TYPE_QUALIFIER);
    createEReference(type_qualifier_list2EClass, TYPE_QUALIFIER_LIST2__TYPE_QUALIFIER_LIST2);

    parameter_type_listEClass = createEClass(PARAMETER_TYPE_LIST);
    createEReference(parameter_type_listEClass, PARAMETER_TYPE_LIST__PARAMETER_LIST);
    createEAttribute(parameter_type_listEClass, PARAMETER_TYPE_LIST__ELLIPSIS);

    parameter_listEClass = createEClass(PARAMETER_LIST);
    createEReference(parameter_listEClass, PARAMETER_LIST__PARAMETER_DECLARATION);
    createEReference(parameter_listEClass, PARAMETER_LIST__PARAMETER_LIST2);

    parameter_list2EClass = createEClass(PARAMETER_LIST2);
    createEReference(parameter_list2EClass, PARAMETER_LIST2__PARAMETER_DECLARATION);
    createEReference(parameter_list2EClass, PARAMETER_LIST2__PARAMETER_LIST2);

    parameter_declarationEClass = createEClass(PARAMETER_DECLARATION);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__DECLARATION_SPECIFIERS);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__DECLARATOR);
    createEReference(parameter_declarationEClass, PARAMETER_DECLARATION__ABSTRACT_DECLARATOR);

    identifier_listEClass = createEClass(IDENTIFIER_LIST);
    createEAttribute(identifier_listEClass, IDENTIFIER_LIST__IDENTIFIER);
    createEReference(identifier_listEClass, IDENTIFIER_LIST__IDENTIFIER_LIST2);

    identifier_list2EClass = createEClass(IDENTIFIER_LIST2);
    createEAttribute(identifier_list2EClass, IDENTIFIER_LIST2__IDENTIFIER);
    createEReference(identifier_list2EClass, IDENTIFIER_LIST2__IDENTIFIER_LIST2);

    type_nameEClass = createEClass(TYPE_NAME);
    createEReference(type_nameEClass, TYPE_NAME__SPECIFIER_QUALIFIER_LIST);
    createEReference(type_nameEClass, TYPE_NAME__ABSTRACT_DECLARATOR);

    abstract_declaratorEClass = createEClass(ABSTRACT_DECLARATOR);
    createEReference(abstract_declaratorEClass, ABSTRACT_DECLARATOR__POINTER);
    createEReference(abstract_declaratorEClass, ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR);

    direct_abstract_declaratorEClass = createEClass(DIRECT_ABSTRACT_DECLARATOR);
    createEReference(direct_abstract_declaratorEClass, DIRECT_ABSTRACT_DECLARATOR__DIRECT_ABSTRACT_DECLARATOR2);

    direct_abstract_declarator2EClass = createEClass(DIRECT_ABSTRACT_DECLARATOR2);
    createEAttribute(direct_abstract_declarator2EClass, DIRECT_ABSTRACT_DECLARATOR2__STATIC);
    createEReference(direct_abstract_declarator2EClass, DIRECT_ABSTRACT_DECLARATOR2__TYPE_QUALIFIER_LIST);
    createEReference(direct_abstract_declarator2EClass, DIRECT_ABSTRACT_DECLARATOR2__ASSIGNMENT_EXPRESSION);
    createEReference(direct_abstract_declarator2EClass, DIRECT_ABSTRACT_DECLARATOR2__PARAMETER_TYPE_LIST);

    initializerEClass = createEClass(INITIALIZER);
    createEReference(initializerEClass, INITIALIZER__INITIALIZER_LIST);
    createEReference(initializerEClass, INITIALIZER__ASSIGNMENT_EXPRESSION);

    initializer_listEClass = createEClass(INITIALIZER_LIST);
    createEReference(initializer_listEClass, INITIALIZER_LIST__DESIGNATION);
    createEReference(initializer_listEClass, INITIALIZER_LIST__INITIALIZER);
    createEReference(initializer_listEClass, INITIALIZER_LIST__INITIALIZER_LIST2);

    initializer_list2EClass = createEClass(INITIALIZER_LIST2);
    createEReference(initializer_list2EClass, INITIALIZER_LIST2__DESIGNATION);
    createEReference(initializer_list2EClass, INITIALIZER_LIST2__INITIALIZER);
    createEReference(initializer_list2EClass, INITIALIZER_LIST2__INITIALIZER_LIST2);

    designationEClass = createEClass(DESIGNATION);
    createEReference(designationEClass, DESIGNATION__DESIGNATOR_LIST);

    designator_listEClass = createEClass(DESIGNATOR_LIST);
    createEReference(designator_listEClass, DESIGNATOR_LIST__DESIGNATOR);
    createEReference(designator_listEClass, DESIGNATOR_LIST__DESIGNATOR_LIST2);

    designator_list2EClass = createEClass(DESIGNATOR_LIST2);
    createEReference(designator_list2EClass, DESIGNATOR_LIST2__DESIGNATOR);
    createEReference(designator_list2EClass, DESIGNATOR_LIST2__DESIGNATOR_LIST2);

    designatorEClass = createEClass(DESIGNATOR);
    createEReference(designatorEClass, DESIGNATOR__CONSTANT_EXPRESSION);
    createEAttribute(designatorEClass, DESIGNATOR__IDENTIFIER);

    static_assert_declarationEClass = createEClass(STATIC_ASSERT_DECLARATION);
    createEAttribute(static_assert_declarationEClass, STATIC_ASSERT_DECLARATION__STATIC_ASSERT);
    createEReference(static_assert_declarationEClass, STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION);
    createEAttribute(static_assert_declarationEClass, STATIC_ASSERT_DECLARATION__STRING_LITERAL);

    statementEClass = createEClass(STATEMENT);
    createEReference(statementEClass, STATEMENT__LABELED_STATEMENT);
    createEReference(statementEClass, STATEMENT__COMPOUND_STATEMENT);
    createEReference(statementEClass, STATEMENT__EXPRESSION_STATEMENT);
    createEReference(statementEClass, STATEMENT__SELECTION_STATEMENT);
    createEReference(statementEClass, STATEMENT__ITERATION_STATEMENT);
    createEReference(statementEClass, STATEMENT__JUMP_STATEMENT);

    labeled_statementEClass = createEClass(LABELED_STATEMENT);
    createEAttribute(labeled_statementEClass, LABELED_STATEMENT__IDENTIFIER);
    createEReference(labeled_statementEClass, LABELED_STATEMENT__STATEMENT);
    createEAttribute(labeled_statementEClass, LABELED_STATEMENT__CASE);
    createEReference(labeled_statementEClass, LABELED_STATEMENT__CONSTANT_EXPRESSION);
    createEAttribute(labeled_statementEClass, LABELED_STATEMENT__DEFAULT);

    compound_statementEClass = createEClass(COMPOUND_STATEMENT);
    createEReference(compound_statementEClass, COMPOUND_STATEMENT__BLOCK_ITEM_LIST);

    block_itemEClass = createEClass(BLOCK_ITEM);
    createEReference(block_itemEClass, BLOCK_ITEM__DECLARATION);
    createEReference(block_itemEClass, BLOCK_ITEM__STATEMENT);

    expression_statementEClass = createEClass(EXPRESSION_STATEMENT);
    createEReference(expression_statementEClass, EXPRESSION_STATEMENT__EXPRESSION);

    selection_statementEClass = createEClass(SELECTION_STATEMENT);
    createEAttribute(selection_statementEClass, SELECTION_STATEMENT__IF);
    createEReference(selection_statementEClass, SELECTION_STATEMENT__EXPRESSION);
    createEReference(selection_statementEClass, SELECTION_STATEMENT__STATEMENT);
    createEAttribute(selection_statementEClass, SELECTION_STATEMENT__ELSE);
    createEReference(selection_statementEClass, SELECTION_STATEMENT__STATEMENT2);
    createEAttribute(selection_statementEClass, SELECTION_STATEMENT__SWITCH);

    iteration_statementEClass = createEClass(ITERATION_STATEMENT);
    createEAttribute(iteration_statementEClass, ITERATION_STATEMENT__WHILE);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__EXPRESSION);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__STATEMENT);
    createEAttribute(iteration_statementEClass, ITERATION_STATEMENT__DO);
    createEAttribute(iteration_statementEClass, ITERATION_STATEMENT__FOR);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__EXPRESSION_STATEMENT);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__EXPRESSION_STATEMENT2);
    createEReference(iteration_statementEClass, ITERATION_STATEMENT__DECLARATION);

    jump_statementEClass = createEClass(JUMP_STATEMENT);
    createEAttribute(jump_statementEClass, JUMP_STATEMENT__GOTO);
    createEAttribute(jump_statementEClass, JUMP_STATEMENT__IDENTIFIER);
    createEAttribute(jump_statementEClass, JUMP_STATEMENT__CONTINUE);
    createEAttribute(jump_statementEClass, JUMP_STATEMENT__BREAK);
    createEAttribute(jump_statementEClass, JUMP_STATEMENT__RETURN);
    createEReference(jump_statementEClass, JUMP_STATEMENT__EXPRESSION);

    translation_unitEClass = createEClass(TRANSLATION_UNIT);
    createEReference(translation_unitEClass, TRANSLATION_UNIT__EXTERNAL_DECLARATION);

    external_declarationEClass = createEClass(EXTERNAL_DECLARATION);
    createEReference(external_declarationEClass, EXTERNAL_DECLARATION__FUNCTION_DEFINITION);
    createEReference(external_declarationEClass, EXTERNAL_DECLARATION__DECLARATION);

    function_definitionEClass = createEClass(FUNCTION_DEFINITION);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__DECLARATION_SPECIFIERS);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__DECLARATOR);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__DECLARATION_LIST);
    createEReference(function_definitionEClass, FUNCTION_DEFINITION__COMPOUND_STATEMENT);

    declaration_listEClass = createEClass(DECLARATION_LIST);
    createEReference(declaration_listEClass, DECLARATION_LIST__DECLARATION);
    createEReference(declaration_listEClass, DECLARATION_LIST__DECLARATION_LIST_2);

    declaration_list2EClass = createEClass(DECLARATION_LIST2);
    createEReference(declaration_list2EClass, DECLARATION_LIST2__DECLARATION);
    createEReference(declaration_list2EClass, DECLARATION_LIST2__DECLARATION_LIST2);

    variableRefEClass = createEClass(VARIABLE_REF);
    createEAttribute(variableRefEClass, VARIABLE_REF__VARIABLE);

    intTypeEClass = createEClass(INT_TYPE);
    createEAttribute(intTypeEClass, INT_TYPE__VALUE);
    createEAttribute(intTypeEClass, INT_TYPE__INT_TYPE);

    floatTypeEClass = createEClass(FLOAT_TYPE);
    createEAttribute(floatTypeEClass, FLOAT_TYPE__VALUE);
    createEAttribute(floatTypeEClass, FLOAT_TYPE__FLOAT_TYPE);

    stringTypeEClass = createEClass(STRING_TYPE);
    createEReference(stringTypeEClass, STRING_TYPE__VALUE);

    booleanTypeEClass = createEClass(BOOLEAN_TYPE);
    createEAttribute(booleanTypeEClass, BOOLEAN_TYPE__VALUE);
    createEAttribute(booleanTypeEClass, BOOLEAN_TYPE__BOOL_TYPE);

    mulEClass = createEClass(MUL);
    createEReference(mulEClass, MUL__LEFT);
    createEAttribute(mulEClass, MUL__OP);
    createEReference(mulEClass, MUL__RIGHT);

    addEClass = createEClass(ADD);
    createEReference(addEClass, ADD__LEFT);
    createEReference(addEClass, ADD__RIGHT);

    minusEClass = createEClass(MINUS);
    createEReference(minusEClass, MINUS__LEFT);
    createEReference(minusEClass, MINUS__RIGHT);

    shfEClass = createEClass(SHF);
    createEReference(shfEClass, SHF__LEFT);
    createEAttribute(shfEClass, SHF__OP);
    createEReference(shfEClass, SHF__RIGHT);

    relEClass = createEClass(REL);
    createEReference(relEClass, REL__LEFT);
    createEAttribute(relEClass, REL__OP);
    createEReference(relEClass, REL__RIGHT);

    eqlEClass = createEClass(EQL);
    createEReference(eqlEClass, EQL__LEFT);
    createEAttribute(eqlEClass, EQL__OP);
    createEReference(eqlEClass, EQL__RIGHT);

    andEClass = createEClass(AND);
    createEReference(andEClass, AND__LEFT);
    createEReference(andEClass, AND__RIGHT);

    exC_OREClass = createEClass(EXC_OR);
    createEReference(exC_OREClass, EXC_OR__LEFT);
    createEReference(exC_OREClass, EXC_OR__RIGHT);

    inC_OREClass = createEClass(INC_OR);
    createEReference(inC_OREClass, INC_OR__LEFT);
    createEReference(inC_OREClass, INC_OR__RIGHT);

    loG_ANDEClass = createEClass(LOG_AND);
    createEReference(loG_ANDEClass, LOG_AND__LEFT);
    createEReference(loG_ANDEClass, LOG_AND__RIGHT);

    loG_OREClass = createEClass(LOG_OR);
    createEReference(loG_OREClass, LOG_OR__LEFT);
    createEReference(loG_OREClass, LOG_OR__RIGHT);

    voidTypeEClass = createEClass(VOID_TYPE);
    createEAttribute(voidTypeEClass, VOID_TYPE__VOID_TYPE);

    charTypeEClass = createEClass(CHAR_TYPE);
    createEAttribute(charTypeEClass, CHAR_TYPE__CHAR_TYPE);

    shortTypeEClass = createEClass(SHORT_TYPE);
    createEAttribute(shortTypeEClass, SHORT_TYPE__SHORT_TYPE);

    longTypeEClass = createEClass(LONG_TYPE);
    createEAttribute(longTypeEClass, LONG_TYPE__LONG_TYPE);

    doubleTypeEClass = createEClass(DOUBLE_TYPE);
    createEAttribute(doubleTypeEClass, DOUBLE_TYPE__DOUBLE_TYPE);

    signedTypeEClass = createEClass(SIGNED_TYPE);
    createEAttribute(signedTypeEClass, SIGNED_TYPE__SIGNED_TYPE);

    unsignedTypeEClass = createEClass(UNSIGNED_TYPE);
    createEAttribute(unsignedTypeEClass, UNSIGNED_TYPE__UNSIGNED_TYPE);

    complexTypeEClass = createEClass(COMPLEX_TYPE);
    createEAttribute(complexTypeEClass, COMPLEX_TYPE__COMPLEX_TYPE);

    imaginaryTypeEClass = createEClass(IMAGINARY_TYPE);
    createEAttribute(imaginaryTypeEClass, IMAGINARY_TYPE__IMAGINARY_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    argument_expression_listEClass.getESuperTypes().add(this.getpostfix_expression2());
    unary_expressionEClass.getESuperTypes().add(this.getsimple_expression());
    expressionEClass.getESuperTypes().add(this.getpostfix_expression2());
    struct_or_unionEClass.getESuperTypes().add(this.getstruct_or_union_specifier());
    variableRefEClass.getESuperTypes().add(this.getsimple_expression());
    intTypeEClass.getESuperTypes().add(this.getsimple_expression());
    intTypeEClass.getESuperTypes().add(this.gettype_specifier());
    floatTypeEClass.getESuperTypes().add(this.getsimple_expression());
    floatTypeEClass.getESuperTypes().add(this.gettype_specifier());
    stringTypeEClass.getESuperTypes().add(this.getsimple_expression());
    booleanTypeEClass.getESuperTypes().add(this.getsimple_expression());
    booleanTypeEClass.getESuperTypes().add(this.gettype_specifier());
    mulEClass.getESuperTypes().add(this.getsimple_expression());
    addEClass.getESuperTypes().add(this.getsimple_expression());
    minusEClass.getESuperTypes().add(this.getsimple_expression());
    shfEClass.getESuperTypes().add(this.getsimple_expression());
    relEClass.getESuperTypes().add(this.getsimple_expression());
    eqlEClass.getESuperTypes().add(this.getsimple_expression());
    andEClass.getESuperTypes().add(this.getsimple_expression());
    exC_OREClass.getESuperTypes().add(this.getsimple_expression());
    inC_OREClass.getESuperTypes().add(this.getsimple_expression());
    loG_ANDEClass.getESuperTypes().add(this.getsimple_expression());
    loG_OREClass.getESuperTypes().add(this.getsimple_expression());
    voidTypeEClass.getESuperTypes().add(this.gettype_specifier());
    charTypeEClass.getESuperTypes().add(this.gettype_specifier());
    shortTypeEClass.getESuperTypes().add(this.gettype_specifier());
    longTypeEClass.getESuperTypes().add(this.gettype_specifier());
    doubleTypeEClass.getESuperTypes().add(this.gettype_specifier());
    signedTypeEClass.getESuperTypes().add(this.gettype_specifier());
    unsignedTypeEClass.getESuperTypes().add(this.gettype_specifier());
    complexTypeEClass.getESuperTypes().add(this.gettype_specifier());
    imaginaryTypeEClass.getESuperTypes().add(this.gettype_specifier());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Declaracoes(), this.gettranslation_unit(), null, "declaracoes", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simple_expressionEClass, simple_expression.class, "simple_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getsimple_expression_Type_name(), this.gettype_name(), null, "type_name", null, 0, 1, simple_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getsimple_expression_Cast_expression(), this.getsimple_expression(), null, "cast_expression", null, 0, 1, simple_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constantEClass, constant.class, "constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getconstant_I_constant(), ecorePackage.getEString(), "i_constant", null, 0, 1, constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getconstant_F_constant(), ecorePackage.getEString(), "f_constant", null, 0, 1, constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getconstant_Enumt(), ecorePackage.getEString(), "enumt", null, 0, 1, constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumeration_constantEClass, enumeration_constant.class, "enumeration_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getenumeration_constant_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, enumeration_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(string_novaEClass, string_nova.class, "string_nova", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getstring_nova_String_literal(), ecorePackage.getEString(), "string_literal", null, 0, 1, string_nova.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstring_nova_Func_name(), ecorePackage.getEString(), "func_name", null, 0, 1, string_nova.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(generic_selectionEClass, generic_selection.class, "generic_selection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getgeneric_selection_Generic(), ecorePackage.getEString(), "generic", null, 0, 1, generic_selection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getgeneric_selection_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, generic_selection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getgeneric_selection_Generic_assoc_list(), this.getgeneric_assoc_list(), null, "generic_assoc_list", null, 0, 1, generic_selection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(generic_assoc_listEClass, generic_assoc_list.class, "generic_assoc_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getgeneric_assoc_list_Generic_association(), this.getgeneric_association(), null, "generic_association", null, 0, 1, generic_assoc_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getgeneric_assoc_list_Generic_list(), this.getgeneric_association(), null, "generic_list", null, 0, -1, generic_assoc_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(generic_associationEClass, generic_association.class, "generic_association", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getgeneric_association_Type_name(), this.gettype_name(), null, "type_name", null, 0, 1, generic_association.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getgeneric_association_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, generic_association.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getgeneric_association_Default(), ecorePackage.getEString(), "default", null, 0, 1, generic_association.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(postfix_expressionEClass, postfix_expression.class, "postfix_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getpostfix_expression_Primary_expression(), this.getsimple_expression(), null, "primary_expression", null, 0, 1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expression_Postifx_expres(), this.getpostfix_expression2(), null, "postifx_expres", null, 0, -1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expression_Type_name(), this.gettype_name(), null, "type_name", null, 0, 1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpostfix_expression_Initializer_list(), this.getinitializer_list(), null, "initializer_list", null, 0, 1, postfix_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(postfix_expression2EClass, postfix_expression2.class, "postfix_expression2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getpostfix_expression2_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, postfix_expression2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argument_expression_listEClass, argument_expression_list.class, "argument_expression_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getargument_expression_list_List(), this.getassignment_expression(), null, "list", null, 0, -1, argument_expression_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unary_expressionEClass, unary_expression.class, "unary_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getunary_expression_Postfix_expression(), this.getpostfix_expression(), null, "postfix_expression", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getunary_expression_Inc_op(), ecorePackage.getEString(), "inc_op", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getunary_expression_Unary_expression(), this.getunary_expression(), null, "unary_expression", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getunary_expression_Dec_op(), ecorePackage.getEString(), "dec_op", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getunary_expression_Unary_operator(), ecorePackage.getEString(), "unary_operator", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getunary_expression_Sizeof(), ecorePackage.getEString(), "sizeof", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getunary_expression_Alignof(), ecorePackage.getEString(), "alignof", null, 0, 1, unary_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditional_expressionEClass, conditional_expression.class, "conditional_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getconditional_expression_Simple_expression(), this.getsimple_expression(), null, "simple_expression", null, 0, 1, conditional_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getconditional_expression_Logical_or_expression(), this.getsimple_expression(), null, "logical_or_expression", null, 0, 1, conditional_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getconditional_expression_Expression(), this.getexpression(), null, "expression", null, 0, 1, conditional_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getconditional_expression_Conditional_expression(), this.getconditional_expression(), null, "conditional_expression", null, 0, 1, conditional_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(assignment_expressionEClass, assignment_expression.class, "assignment_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getassignment_expression_Conditional_expression(), this.getconditional_expression(), null, "conditional_expression", null, 0, 1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getassignment_expression_Unary_expression(), this.getunary_expression(), null, "unary_expression", null, 0, 1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getassignment_expression_Assignment_operator(), this.getassignment_operator(), null, "assignment_operator", null, 0, 1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getassignment_expression_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, assignment_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(assignment_operatorEClass, assignment_operator.class, "assignment_operator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getassignment_operator_Mul_assign(), ecorePackage.getEString(), "mul_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Div_assign(), ecorePackage.getEString(), "div_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Mod_assign(), ecorePackage.getEString(), "mod_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Add_assign(), ecorePackage.getEString(), "add_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Sub_assign(), ecorePackage.getEString(), "sub_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Left_assign(), ecorePackage.getEString(), "left_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Right_assign(), ecorePackage.getEString(), "right_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_And_assign(), ecorePackage.getEString(), "and_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Xor_assign(), ecorePackage.getEString(), "xor_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getassignment_operator_Or_assign(), ecorePackage.getEString(), "or_assign", null, 0, 1, assignment_operator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, expression.class, "expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexpression_Expression2(), this.getexpression2(), null, "expression2", null, 0, 1, expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expression2EClass, expression2.class, "expression2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexpression2_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, expression2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getexpression2_Expression2(), this.getexpression2(), null, "expression2", null, 0, 1, expression2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constant_expressionEClass, constant_expression.class, "constant_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getconstant_expression_Conditional_expression(), this.getconditional_expression(), null, "conditional_expression", null, 0, 1, constant_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declarationEClass, declaration.class, "declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_Declaration_specifiers(), this.getdeclaration_specifiers(), null, "declaration_specifiers", null, 0, 1, declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_Init_declarator_list(), this.getinit_declarator_list(), null, "init_declarator_list", null, 0, 1, declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_Static_assert_declaration(), this.getstatic_assert_declaration(), null, "static_assert_declaration", null, 0, 1, declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaration_specifiersEClass, declaration_specifiers.class, "declaration_specifiers", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_specifiers_Storage_class_specifier(), this.getstorage_class_specifier(), null, "storage_class_specifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_Declaration_specifiers(), this.getdeclaration_specifiers(), null, "declaration_specifiers", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_Type_specifier(), this.gettype_specifier(), null, "type_specifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_Type_qualifier(), this.gettype_qualifier(), null, "type_qualifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_Function_specifier(), this.getfunction_specifier(), null, "function_specifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_specifiers_Alignment_specifier(), this.getalignment_specifier(), null, "alignment_specifier", null, 0, 1, declaration_specifiers.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(init_declarator_listEClass, init_declarator_list.class, "init_declarator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinit_declarator_list_Init_declarator(), this.getinit_declarator(), null, "init_declarator", null, 0, 1, init_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinit_declarator_list_Init_declarator_list2(), this.getinit_declarator_list2(), null, "init_declarator_list2", null, 0, 1, init_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(init_declarator_list2EClass, init_declarator_list2.class, "init_declarator_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinit_declarator_list2_Init_declarator(), this.getinit_declarator(), null, "init_declarator", null, 0, 1, init_declarator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinit_declarator_list2_Init_declarator_list2(), this.getinit_declarator_list2(), null, "init_declarator_list2", null, 0, 1, init_declarator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(init_declaratorEClass, init_declarator.class, "init_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinit_declarator_Declarator(), this.getdeclarator(), null, "declarator", null, 0, 1, init_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinit_declarator_Initializer(), this.getsimple_expression(), null, "initializer", null, 0, 1, init_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(storage_class_specifierEClass, storage_class_specifier.class, "storage_class_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getstorage_class_specifier_Typedef(), ecorePackage.getEString(), "typedef", null, 0, 1, storage_class_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstorage_class_specifier_Extern(), ecorePackage.getEString(), "extern", null, 0, 1, storage_class_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstorage_class_specifier_Static(), ecorePackage.getEString(), "static", null, 0, 1, storage_class_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstorage_class_specifier_Thread_local(), ecorePackage.getEString(), "thread_local", null, 0, 1, storage_class_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstorage_class_specifier_Auto(), ecorePackage.getEString(), "auto", null, 0, 1, storage_class_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstorage_class_specifier_Register(), ecorePackage.getEString(), "register", null, 0, 1, storage_class_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_specifierEClass, type_specifier.class, "type_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettype_specifier_Atomic_type_specifier(), this.getatomic_type_specifier(), null, "atomic_type_specifier", null, 0, 1, type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_specifier_Struct_or_union_specifier(), this.getstruct_or_union_specifier(), null, "struct_or_union_specifier", null, 0, 1, type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_specifier_Enum_specifier(), this.getenum_specifier(), null, "enum_specifier", null, 0, 1, type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettype_specifier_Typedef_name(), ecorePackage.getEString(), "typedef_name", null, 0, 1, type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_or_union_specifierEClass, struct_or_union_specifier.class, "struct_or_union_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_or_union_specifier_Struct_or_union(), this.getstruct_or_union(), null, "struct_or_union", null, 0, 1, struct_or_union_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_or_union_specifier_Struct_declaration_list(), this.getstruct_declaration_list(), null, "struct_declaration_list", null, 0, 1, struct_or_union_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstruct_or_union_specifier_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, struct_or_union_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_or_unionEClass, struct_or_union.class, "struct_or_union", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getstruct_or_union_Struct(), ecorePackage.getEString(), "struct", null, 0, 1, struct_or_union.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstruct_or_union_Union(), ecorePackage.getEString(), "union", null, 0, 1, struct_or_union.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declaration_listEClass, struct_declaration_list.class, "struct_declaration_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declaration_list_Struct_declaration(), this.getstruct_declaration(), null, "struct_declaration", null, 0, 1, struct_declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_list_Struct_declaration_list2(), this.getstruct_declaration_list2(), null, "struct_declaration_list2", null, 0, 1, struct_declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declaration_list2EClass, struct_declaration_list2.class, "struct_declaration_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declaration_list2_Struct_declaration(), this.getstruct_declaration(), null, "struct_declaration", null, 0, 1, struct_declaration_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_list2_Struct_declaration_list2(), this.getstruct_declaration_list2(), null, "struct_declaration_list2", null, 0, 1, struct_declaration_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declarationEClass, struct_declaration.class, "struct_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declaration_Specifier_qualifier_list(), this.getspecifier_qualifier_list(), null, "specifier_qualifier_list", null, 0, 1, struct_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_Struct_declarator_list(), this.getstruct_declarator_list(), null, "struct_declarator_list", null, 0, 1, struct_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declaration_Static_assert_declaration(), this.getstatic_assert_declaration(), null, "static_assert_declaration", null, 0, 1, struct_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specifier_qualifier_listEClass, specifier_qualifier_list.class, "specifier_qualifier_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getspecifier_qualifier_list_Type_specifier(), this.gettype_specifier(), null, "type_specifier", null, 0, 1, specifier_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getspecifier_qualifier_list_Specifier_qualifier_list(), this.getspecifier_qualifier_list(), null, "specifier_qualifier_list", null, 0, 1, specifier_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getspecifier_qualifier_list_Type_qualifier(), this.gettype_specifier(), null, "type_qualifier", null, 0, 1, specifier_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declarator_listEClass, struct_declarator_list.class, "struct_declarator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declarator_list_Struct_declarator(), this.getstruct_declarator(), null, "struct_declarator", null, 0, 1, struct_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declarator_list_Struct_declarator_list2(), this.getstruct_declarator_list2(), null, "struct_declarator_list2", null, 0, 1, struct_declarator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declarator_list2EClass, struct_declarator_list2.class, "struct_declarator_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declarator_list2_Struct_declarator(), this.getstruct_declarator(), null, "struct_declarator", null, 0, 1, struct_declarator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declarator_list2_Struct_declarator_list2(), this.getstruct_declarator_list2(), null, "struct_declarator_list2", null, 0, 1, struct_declarator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(struct_declaratorEClass, struct_declarator.class, "struct_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstruct_declarator_Constant_expression(), this.getconstant_expression(), null, "constant_expression", null, 0, 1, struct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstruct_declarator_Declarator(), this.getdeclarator(), null, "declarator", null, 0, 1, struct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enum_specifierEClass, enum_specifier.class, "enum_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getenum_specifier_Enumt(), ecorePackage.getEString(), "enumt", null, 0, 1, enum_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getenum_specifier_Enumerator_list(), this.getenumerator_list(), null, "enumerator_list", null, 0, 1, enum_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getenum_specifier_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, enum_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumerator_listEClass, enumerator_list.class, "enumerator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getenumerator_list_Enumerator(), this.getenumerator(), null, "enumerator", null, 0, 1, enumerator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getenumerator_list_Enumerator_list2(), this.getenumerator_list2(), null, "enumerator_list2", null, 0, 1, enumerator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumerator_list2EClass, enumerator_list2.class, "enumerator_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getenumerator_list2_Enumerator(), this.getenumerator(), null, "enumerator", null, 0, 1, enumerator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getenumerator_list2_Enumerator_list2(), this.getenumerator_list2(), null, "enumerator_list2", null, 0, 1, enumerator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumeratorEClass, enumerator.class, "enumerator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getenumerator_Enumeration_constant(), this.getenumeration_constant(), null, "enumeration_constant", null, 0, 1, enumerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getenumerator_Constant_expression(), this.getconstant_expression(), null, "constant_expression", null, 0, 1, enumerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(atomic_type_specifierEClass, atomic_type_specifier.class, "atomic_type_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getatomic_type_specifier_Atomic(), ecorePackage.getEString(), "atomic", null, 0, 1, atomic_type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getatomic_type_specifier_Type_name(), this.gettype_name(), null, "type_name", null, 0, 1, atomic_type_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_qualifierEClass, type_qualifier.class, "type_qualifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettype_qualifier_Const(), ecorePackage.getEString(), "const", null, 0, 1, type_qualifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettype_qualifier_Restrict(), ecorePackage.getEString(), "restrict", null, 0, 1, type_qualifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettype_qualifier_Volatile(), ecorePackage.getEString(), "volatile", null, 0, 1, type_qualifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettype_qualifier_Atomic(), ecorePackage.getEString(), "atomic", null, 0, 1, type_qualifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(function_specifierEClass, function_specifier.class, "function_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getfunction_specifier_Inline(), ecorePackage.getEString(), "inline", null, 0, 1, function_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getfunction_specifier_Noreturn(), ecorePackage.getEString(), "noreturn", null, 0, 1, function_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(alignment_specifierEClass, alignment_specifier.class, "alignment_specifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getalignment_specifier_Alignas(), ecorePackage.getEString(), "alignas", null, 0, 1, alignment_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getalignment_specifier_Type_name(), this.gettype_name(), null, "type_name", null, 0, 1, alignment_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getalignment_specifier_Constant_expression(), this.getconstant_expression(), null, "constant_expression", null, 0, 1, alignment_specifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaratorEClass, declarator.class, "declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclarator_Pointer(), this.getpointer(), null, "pointer", null, 0, 1, declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclarator_Direct_declarator(), this.getdirect_declarator(), null, "direct_declarator", null, 0, 1, declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(direct_declaratorEClass, direct_declarator.class, "direct_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdirect_declarator_Name(), ecorePackage.getEString(), "name", null, 0, 1, direct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declarator_Direct_declarators(), this.getdirect_declarator2(), null, "direct_declarators", null, 0, 1, direct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declarator_Declarator(), this.getdeclarator(), null, "Declarator", null, 0, 1, direct_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(direct_declarator2EClass, direct_declarator2.class, "direct_declarator2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdirect_declarator2_Declarators(), this.getdirect_declarator2(), null, "declarators", null, 0, -1, direct_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdirect_declarator2_Static(), ecorePackage.getEString(), "static", null, 0, 1, direct_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declarator2_Type_qualifier_list(), this.gettype_qualifier_list(), null, "type_qualifier_list", null, 0, 1, direct_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declarator2_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, direct_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declarator2_Parameter_type_list(), this.getparameter_type_list(), null, "parameter_type_list", null, 0, 1, direct_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_declarator2_Identifier_list(), this.getidentifier_list(), null, "identifier_list", null, 0, 1, direct_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pointerEClass, pointer.class, "pointer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getpointer_Type_qualifier_list(), this.gettype_qualifier_list(), null, "type_qualifier_list", null, 0, 1, pointer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getpointer_Pointer(), this.getpointer(), null, "pointer", null, 0, 1, pointer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_qualifier_listEClass, type_qualifier_list.class, "type_qualifier_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettype_qualifier_list_Type_qualifier(), this.gettype_qualifier(), null, "type_qualifier", null, 0, 1, type_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_qualifier_list_Type_qualifier_list2(), this.gettype_qualifier_list2(), null, "type_qualifier_list2", null, 0, 1, type_qualifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_qualifier_list2EClass, type_qualifier_list2.class, "type_qualifier_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettype_qualifier_list2_Type_qualifier(), this.gettype_qualifier(), null, "type_qualifier", null, 0, 1, type_qualifier_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_qualifier_list2_Type_qualifier_list2(), this.gettype_qualifier_list2(), null, "type_qualifier_list2", null, 0, 1, type_qualifier_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_type_listEClass, parameter_type_list.class, "parameter_type_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_type_list_Parameter_list(), this.getparameter_list(), null, "parameter_list", null, 0, 1, parameter_type_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getparameter_type_list_Ellipsis(), ecorePackage.getEString(), "ellipsis", null, 0, 1, parameter_type_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_listEClass, parameter_list.class, "parameter_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_list_Parameter_declaration(), this.getparameter_declaration(), null, "parameter_declaration", null, 0, 1, parameter_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_list_Parameter_list2(), this.getparameter_list2(), null, "parameter_list2", null, 0, 1, parameter_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_list2EClass, parameter_list2.class, "parameter_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_list2_Parameter_declaration(), this.getparameter_declaration(), null, "parameter_declaration", null, 0, 1, parameter_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_list2_Parameter_list2(), this.getparameter_list2(), null, "parameter_list2", null, 0, 1, parameter_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameter_declarationEClass, parameter_declaration.class, "parameter_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameter_declaration_Declaration_specifiers(), this.getdeclaration_specifiers(), null, "declaration_specifiers", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_declaration_Declarator(), this.getdeclarator(), null, "declarator", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getparameter_declaration_Abstract_declarator(), this.getabstract_declarator(), null, "abstract_declarator", null, 0, 1, parameter_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(identifier_listEClass, identifier_list.class, "identifier_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getidentifier_list_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, identifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getidentifier_list_Identifier_list2(), this.getidentifier_list2(), null, "identifier_list2", null, 0, 1, identifier_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(identifier_list2EClass, identifier_list2.class, "identifier_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getidentifier_list2_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, identifier_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getidentifier_list2_Identifier_list2(), this.getidentifier_list2(), null, "identifier_list2", null, 0, 1, identifier_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(type_nameEClass, type_name.class, "type_name", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettype_name_Specifier_qualifier_list(), this.getspecifier_qualifier_list(), null, "specifier_qualifier_list", null, 0, 1, type_name.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettype_name_Abstract_declarator(), this.getabstract_declarator(), null, "abstract_declarator", null, 0, 1, type_name.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstract_declaratorEClass, abstract_declarator.class, "abstract_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getabstract_declarator_Pointer(), this.getpointer(), null, "pointer", null, 0, 1, abstract_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getabstract_declarator_Direct_abstract_declarator(), this.getdirect_abstract_declarator(), null, "direct_abstract_declarator", null, 0, 1, abstract_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(direct_abstract_declaratorEClass, direct_abstract_declarator.class, "direct_abstract_declarator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdirect_abstract_declarator_Direct_abstract_declarator2(), this.getdirect_abstract_declarator2(), null, "direct_abstract_declarator2", null, 0, -1, direct_abstract_declarator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(direct_abstract_declarator2EClass, direct_abstract_declarator2.class, "direct_abstract_declarator2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdirect_abstract_declarator2_Static(), ecorePackage.getEString(), "static", null, 0, 1, direct_abstract_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_abstract_declarator2_Type_qualifier_list(), this.gettype_qualifier_list(), null, "type_qualifier_list", null, 0, 1, direct_abstract_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_abstract_declarator2_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, direct_abstract_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdirect_abstract_declarator2_Parameter_type_list(), this.getparameter_type_list(), null, "parameter_type_list", null, 0, 1, direct_abstract_declarator2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initializerEClass, initializer.class, "initializer", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitializer_Initializer_list(), this.getinitializer_list(), null, "initializer_list", null, 0, 1, initializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_Assignment_expression(), this.getassignment_expression(), null, "assignment_expression", null, 0, 1, initializer.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initializer_listEClass, initializer_list.class, "initializer_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitializer_list_Designation(), this.getdesignation(), null, "designation", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list_Initializer(), this.getinitializer(), null, "initializer", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list_Initializer_list2(), this.getinitializer_list2(), null, "initializer_list2", null, 0, 1, initializer_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initializer_list2EClass, initializer_list2.class, "initializer_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getinitializer_list2_Designation(), this.getdesignation(), null, "designation", null, 0, 1, initializer_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list2_Initializer(), this.getinitializer(), null, "initializer", null, 0, 1, initializer_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getinitializer_list2_Initializer_list2(), this.getinitializer_list2(), null, "initializer_list2", null, 0, 1, initializer_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designationEClass, designation.class, "designation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdesignation_Designator_list(), this.getdesignator_list(), null, "designator_list", null, 0, 1, designation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designator_listEClass, designator_list.class, "designator_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdesignator_list_Designator(), this.getdesignator(), null, "designator", null, 0, 1, designator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdesignator_list_Designator_list2(), this.getdesignator_list2(), null, "designator_list2", null, 0, 1, designator_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designator_list2EClass, designator_list2.class, "designator_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdesignator_list2_Designator(), this.getdesignator(), null, "designator", null, 0, 1, designator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdesignator_list2_Designator_list2(), this.getdesignator_list2(), null, "designator_list2", null, 0, 1, designator_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(designatorEClass, designator.class, "designator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdesignator_Constant_expression(), this.getconstant_expression(), null, "constant_expression", null, 0, 1, designator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdesignator_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, designator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(static_assert_declarationEClass, static_assert_declaration.class, "static_assert_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getstatic_assert_declaration_Static_assert(), ecorePackage.getEString(), "static_assert", null, 0, 1, static_assert_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstatic_assert_declaration_Constant_expression(), this.getconstant_expression(), null, "constant_expression", null, 0, 1, static_assert_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getstatic_assert_declaration_String_literal(), ecorePackage.getEString(), "string_literal", null, 0, 1, static_assert_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, statement.class, "statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstatement_Labeled_statement(), this.getlabeled_statement(), null, "labeled_statement", null, 0, 1, statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstatement_Compound_statement(), this.getcompound_statement(), null, "compound_statement", null, 0, 1, statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstatement_Expression_statement(), this.getexpression_statement(), null, "expression_statement", null, 0, 1, statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstatement_Selection_statement(), this.getselection_statement(), null, "selection_statement", null, 0, 1, statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstatement_Iteration_statement(), this.getiteration_statement(), null, "iteration_statement", null, 0, 1, statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getstatement_Jump_statement(), this.getjump_statement(), null, "jump_statement", null, 0, 1, statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(labeled_statementEClass, labeled_statement.class, "labeled_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getlabeled_statement_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlabeled_statement_Statement(), this.getstatement(), null, "statement", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlabeled_statement_Case(), ecorePackage.getEString(), "case", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getlabeled_statement_Constant_expression(), this.getconstant_expression(), null, "constant_expression", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getlabeled_statement_Default(), ecorePackage.getEString(), "default", null, 0, 1, labeled_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(compound_statementEClass, compound_statement.class, "compound_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcompound_statement_Block_item_list(), this.getblock_item(), null, "block_item_list", null, 0, -1, compound_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(block_itemEClass, block_item.class, "block_item", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getblock_item_Declaration(), this.getdeclaration(), null, "declaration", null, 0, 1, block_item.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getblock_item_Statement(), this.getstatement(), null, "statement", null, 0, 1, block_item.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expression_statementEClass, expression_statement.class, "expression_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexpression_statement_Expression(), this.getexpression(), null, "expression", null, 0, 1, expression_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selection_statementEClass, selection_statement.class, "selection_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getselection_statement_If(), ecorePackage.getEString(), "if", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getselection_statement_Expression(), this.getsimple_expression(), null, "expression", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getselection_statement_Statement(), this.getstatement(), null, "statement", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getselection_statement_Else(), ecorePackage.getEString(), "else", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getselection_statement_Statement2(), this.getstatement(), null, "statement2", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getselection_statement_Switch(), ecorePackage.getEString(), "switch", null, 0, 1, selection_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(iteration_statementEClass, iteration_statement.class, "iteration_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getiteration_statement_While(), ecorePackage.getEString(), "while", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Expression(), ecorePackage.getEObject(), null, "expression", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Statement(), this.getstatement(), null, "statement", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getiteration_statement_Do(), ecorePackage.getEString(), "do", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getiteration_statement_For(), ecorePackage.getEString(), "for", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Expression_statement(), this.getexpression_statement(), null, "expression_statement", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Expression_statement2(), this.getexpression_statement(), null, "expression_statement2", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getiteration_statement_Declaration(), this.getdeclaration(), null, "declaration", null, 0, 1, iteration_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(jump_statementEClass, jump_statement.class, "jump_statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getjump_statement_Goto(), ecorePackage.getEString(), "goto", null, 0, 1, jump_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getjump_statement_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, jump_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getjump_statement_Continue(), ecorePackage.getEString(), "continue", null, 0, 1, jump_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getjump_statement_Break(), ecorePackage.getEString(), "break", null, 0, 1, jump_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getjump_statement_Return(), ecorePackage.getEString(), "return", null, 0, 1, jump_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getjump_statement_Expression(), this.getexpression(), null, "expression", null, 0, 1, jump_statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(translation_unitEClass, translation_unit.class, "translation_unit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettranslation_unit_External_declaration(), this.getexternal_declaration(), null, "external_declaration", null, 0, 1, translation_unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(external_declarationEClass, external_declaration.class, "external_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getexternal_declaration_Function_definition(), this.getfunction_definition(), null, "function_definition", null, 0, 1, external_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getexternal_declaration_Declaration(), this.getdeclaration(), null, "declaration", null, 0, 1, external_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(function_definitionEClass, function_definition.class, "function_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getfunction_definition_Declaration_specifiers(), this.getdeclaration_specifiers(), null, "declaration_specifiers", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunction_definition_Declarator(), this.getdeclarator(), null, "declarator", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunction_definition_Declaration_list(), this.getdeclaration_list(), null, "declaration_list", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfunction_definition_Compound_statement(), this.getcompound_statement(), null, "compound_statement", null, 0, 1, function_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaration_listEClass, declaration_list.class, "declaration_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_list_Declaration(), this.getdeclaration(), null, "declaration", null, 0, 1, declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_list_Declaration_list_2(), this.getdeclaration_list2(), null, "declaration_list_2", null, 0, 1, declaration_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(declaration_list2EClass, declaration_list2.class, "declaration_list2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getdeclaration_list2_Declaration(), this.getdeclaration(), null, "declaration", null, 0, 1, declaration_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getdeclaration_list2_Declaration_list2(), this.getdeclaration_list2(), null, "declaration_list2", null, 0, 1, declaration_list2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableRefEClass, variableRef.class, "variableRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getvariableRef_Variable(), ecorePackage.getEString(), "variable", null, 0, 1, variableRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(intTypeEClass, intType.class, "intType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getintType_Value(), ecorePackage.getEString(), "value", null, 0, 1, intType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getintType_Int_type(), ecorePackage.getEString(), "int_type", null, 0, 1, intType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(floatTypeEClass, floatType.class, "floatType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getfloatType_Value(), ecorePackage.getEString(), "value", null, 0, 1, floatType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getfloatType_Float_type(), ecorePackage.getEString(), "float_type", null, 0, 1, floatType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringTypeEClass, stringType.class, "stringType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getstringType_Value(), this.getstring_nova(), null, "value", null, 0, 1, stringType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanTypeEClass, booleanType.class, "booleanType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getbooleanType_Value(), ecorePackage.getEString(), "value", null, 0, 1, booleanType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getbooleanType_Bool_type(), ecorePackage.getEString(), "bool_type", null, 0, 1, booleanType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mulEClass, org.xtext.example.mydsl.myDsl.MUL.class, "MUL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMUL_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.MUL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMUL_Op(), ecorePackage.getEString(), "op", null, 0, 1, org.xtext.example.mydsl.myDsl.MUL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMUL_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.MUL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addEClass, org.xtext.example.mydsl.myDsl.ADD.class, "ADD", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getADD_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.ADD.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getADD_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.ADD.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(minusEClass, org.xtext.example.mydsl.myDsl.MINUS.class, "MINUS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMINUS_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.MINUS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMINUS_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.MINUS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(shfEClass, org.xtext.example.mydsl.myDsl.SHF.class, "SHF", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSHF_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.SHF.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSHF_Op(), ecorePackage.getEString(), "op", null, 0, 1, org.xtext.example.mydsl.myDsl.SHF.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSHF_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.SHF.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(relEClass, org.xtext.example.mydsl.myDsl.REL.class, "REL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getREL_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.REL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getREL_Op(), ecorePackage.getEString(), "op", null, 0, 1, org.xtext.example.mydsl.myDsl.REL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getREL_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.REL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eqlEClass, org.xtext.example.mydsl.myDsl.EQL.class, "EQL", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEQL_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.EQL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEQL_Op(), ecorePackage.getEString(), "op", null, 0, 1, org.xtext.example.mydsl.myDsl.EQL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEQL_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.EQL.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(andEClass, org.xtext.example.mydsl.myDsl.AND.class, "AND", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAND_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.AND.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAND_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.AND.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exC_OREClass, org.xtext.example.mydsl.myDsl.EXC_OR.class, "EXC_OR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEXC_OR_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.EXC_OR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEXC_OR_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.EXC_OR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inC_OREClass, org.xtext.example.mydsl.myDsl.INC_OR.class, "INC_OR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getINC_OR_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.INC_OR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getINC_OR_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.INC_OR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(loG_ANDEClass, org.xtext.example.mydsl.myDsl.LOG_AND.class, "LOG_AND", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLOG_AND_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.LOG_AND.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLOG_AND_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.LOG_AND.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(loG_OREClass, org.xtext.example.mydsl.myDsl.LOG_OR.class, "LOG_OR", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLOG_OR_Left(), this.getsimple_expression(), null, "left", null, 0, 1, org.xtext.example.mydsl.myDsl.LOG_OR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLOG_OR_Right(), this.getsimple_expression(), null, "right", null, 0, 1, org.xtext.example.mydsl.myDsl.LOG_OR.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(voidTypeEClass, voidType.class, "voidType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getvoidType_Void_type(), ecorePackage.getEString(), "void_type", null, 0, 1, voidType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(charTypeEClass, charType.class, "charType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getcharType_Char_type(), ecorePackage.getEString(), "char_type", null, 0, 1, charType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(shortTypeEClass, shortType.class, "shortType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getshortType_Short_type(), ecorePackage.getEString(), "short_type", null, 0, 1, shortType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(longTypeEClass, longType.class, "longType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getlongType_Long_type(), ecorePackage.getEString(), "long_type", null, 0, 1, longType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(doubleTypeEClass, doubleType.class, "doubleType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdoubleType_Double_type(), ecorePackage.getEString(), "double_type", null, 0, 1, doubleType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(signedTypeEClass, signedType.class, "signedType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getsignedType_Signed_type(), ecorePackage.getEString(), "signed_type", null, 0, 1, signedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unsignedTypeEClass, unsignedType.class, "unsignedType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getunsignedType_Unsigned_type(), ecorePackage.getEString(), "unsigned_type", null, 0, 1, unsignedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(complexTypeEClass, complexType.class, "complexType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getcomplexType_Complex_type(), ecorePackage.getEString(), "complex_type", null, 0, 1, complexType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(imaginaryTypeEClass, imaginaryType.class, "imaginaryType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getimaginaryType_Imaginary_type(), ecorePackage.getEString(), "imaginary_type", null, 0, 1, imaginaryType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //MyDslPackageImpl
