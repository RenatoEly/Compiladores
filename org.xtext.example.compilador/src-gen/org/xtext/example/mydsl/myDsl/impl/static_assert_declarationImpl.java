/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.constant_expression;
import org.xtext.example.mydsl.myDsl.static_assert_declaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>static assert declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.static_assert_declarationImpl#getStatic_assert <em>Static assert</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.static_assert_declarationImpl#getConstant_expression <em>Constant expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.static_assert_declarationImpl#getString_literal <em>String literal</em>}</li>
 * </ul>
 *
 * @generated
 */
public class static_assert_declarationImpl extends MinimalEObjectImpl.Container implements static_assert_declaration
{
  /**
   * The default value of the '{@link #getStatic_assert() <em>Static assert</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatic_assert()
   * @generated
   * @ordered
   */
  protected static final String STATIC_ASSERT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStatic_assert() <em>Static assert</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatic_assert()
   * @generated
   * @ordered
   */
  protected String static_assert = STATIC_ASSERT_EDEFAULT;

  /**
   * The cached value of the '{@link #getConstant_expression() <em>Constant expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_expression()
   * @generated
   * @ordered
   */
  protected constant_expression constant_expression;

  /**
   * The default value of the '{@link #getString_literal() <em>String literal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString_literal()
   * @generated
   * @ordered
   */
  protected static final String STRING_LITERAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString_literal() <em>String literal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString_literal()
   * @generated
   * @ordered
   */
  protected String string_literal = STRING_LITERAL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static_assert_declarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STATIC_ASSERT_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getStatic_assert()
  {
    return static_assert;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStatic_assert(String newStatic_assert)
  {
    String oldStatic_assert = static_assert;
    static_assert = newStatic_assert;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__STATIC_ASSERT, oldStatic_assert, static_assert));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant_expression getConstant_expression()
  {
    return constant_expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstant_expression(constant_expression newConstant_expression, NotificationChain msgs)
  {
    constant_expression oldConstant_expression = constant_expression;
    constant_expression = newConstant_expression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION, oldConstant_expression, newConstant_expression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstant_expression(constant_expression newConstant_expression)
  {
    if (newConstant_expression != constant_expression)
    {
      NotificationChain msgs = null;
      if (constant_expression != null)
        msgs = ((InternalEObject)constant_expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION, null, msgs);
      if (newConstant_expression != null)
        msgs = ((InternalEObject)newConstant_expression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION, null, msgs);
      msgs = basicSetConstant_expression(newConstant_expression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION, newConstant_expression, newConstant_expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getString_literal()
  {
    return string_literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setString_literal(String newString_literal)
  {
    String oldString_literal = string_literal;
    string_literal = newString_literal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATIC_ASSERT_DECLARATION__STRING_LITERAL, oldString_literal, string_literal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION:
        return basicSetConstant_expression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STATIC_ASSERT:
        return getStatic_assert();
      case MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION:
        return getConstant_expression();
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRING_LITERAL:
        return getString_literal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STATIC_ASSERT:
        setStatic_assert((String)newValue);
        return;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION:
        setConstant_expression((constant_expression)newValue);
        return;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRING_LITERAL:
        setString_literal((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STATIC_ASSERT:
        setStatic_assert(STATIC_ASSERT_EDEFAULT);
        return;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION:
        setConstant_expression((constant_expression)null);
        return;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRING_LITERAL:
        setString_literal(STRING_LITERAL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STATIC_ASSERT:
        return STATIC_ASSERT_EDEFAULT == null ? static_assert != null : !STATIC_ASSERT_EDEFAULT.equals(static_assert);
      case MyDslPackage.STATIC_ASSERT_DECLARATION__CONSTANT_EXPRESSION:
        return constant_expression != null;
      case MyDslPackage.STATIC_ASSERT_DECLARATION__STRING_LITERAL:
        return STRING_LITERAL_EDEFAULT == null ? string_literal != null : !STRING_LITERAL_EDEFAULT.equals(string_literal);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (static_assert: ");
    result.append(static_assert);
    result.append(", string_literal: ");
    result.append(string_literal);
    result.append(')');
    return result.toString();
  }

} //static_assert_declarationImpl
