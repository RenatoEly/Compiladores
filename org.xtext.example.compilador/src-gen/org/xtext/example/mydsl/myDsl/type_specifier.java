/**
 * generated by Xtext 2.9.2
 */
package org.xtext.example.mydsl.myDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>type specifier</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getVoid_type <em>Void type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getChar_type <em>Char type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getShort_type <em>Short type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getLong_type <em>Long type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getFloat_type <em>Float type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getDouble_type <em>Double type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getSigned_type <em>Signed type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getUnsigned_type <em>Unsigned type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getBool_type <em>Bool type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getComplex_type <em>Complex type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getImaginary_type <em>Imaginary type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getAtomic_type_specifier <em>Atomic type specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getStruct_or_union_specifier <em>Struct or union specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getEnum_specifier <em>Enum specifier</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.type_specifier#getTypedef_name <em>Typedef name</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier()
 * @model
 * @generated
 */
public interface type_specifier extends EObject
{
  /**
   * Returns the value of the '<em><b>Void type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Void type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Void type</em>' attribute.
   * @see #setVoid_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Void_type()
   * @model
   * @generated
   */
  String getVoid_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getVoid_type <em>Void type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Void type</em>' attribute.
   * @see #getVoid_type()
   * @generated
   */
  void setVoid_type(String value);

  /**
   * Returns the value of the '<em><b>Char type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Char type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Char type</em>' attribute.
   * @see #setChar_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Char_type()
   * @model
   * @generated
   */
  String getChar_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getChar_type <em>Char type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Char type</em>' attribute.
   * @see #getChar_type()
   * @generated
   */
  void setChar_type(String value);

  /**
   * Returns the value of the '<em><b>Short type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Short type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Short type</em>' attribute.
   * @see #setShort_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Short_type()
   * @model
   * @generated
   */
  String getShort_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getShort_type <em>Short type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Short type</em>' attribute.
   * @see #getShort_type()
   * @generated
   */
  void setShort_type(String value);

  /**
   * Returns the value of the '<em><b>Long type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Long type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Long type</em>' attribute.
   * @see #setLong_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Long_type()
   * @model
   * @generated
   */
  String getLong_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getLong_type <em>Long type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Long type</em>' attribute.
   * @see #getLong_type()
   * @generated
   */
  void setLong_type(String value);

  /**
   * Returns the value of the '<em><b>Float type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Float type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Float type</em>' attribute.
   * @see #setFloat_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Float_type()
   * @model
   * @generated
   */
  String getFloat_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getFloat_type <em>Float type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Float type</em>' attribute.
   * @see #getFloat_type()
   * @generated
   */
  void setFloat_type(String value);

  /**
   * Returns the value of the '<em><b>Double type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Double type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Double type</em>' attribute.
   * @see #setDouble_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Double_type()
   * @model
   * @generated
   */
  String getDouble_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getDouble_type <em>Double type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Double type</em>' attribute.
   * @see #getDouble_type()
   * @generated
   */
  void setDouble_type(String value);

  /**
   * Returns the value of the '<em><b>Signed type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Signed type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Signed type</em>' attribute.
   * @see #setSigned_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Signed_type()
   * @model
   * @generated
   */
  String getSigned_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getSigned_type <em>Signed type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Signed type</em>' attribute.
   * @see #getSigned_type()
   * @generated
   */
  void setSigned_type(String value);

  /**
   * Returns the value of the '<em><b>Unsigned type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Unsigned type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Unsigned type</em>' attribute.
   * @see #setUnsigned_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Unsigned_type()
   * @model
   * @generated
   */
  String getUnsigned_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getUnsigned_type <em>Unsigned type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Unsigned type</em>' attribute.
   * @see #getUnsigned_type()
   * @generated
   */
  void setUnsigned_type(String value);

  /**
   * Returns the value of the '<em><b>Bool type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Bool type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bool type</em>' attribute.
   * @see #setBool_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Bool_type()
   * @model
   * @generated
   */
  String getBool_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getBool_type <em>Bool type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bool type</em>' attribute.
   * @see #getBool_type()
   * @generated
   */
  void setBool_type(String value);

  /**
   * Returns the value of the '<em><b>Complex type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Complex type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Complex type</em>' attribute.
   * @see #setComplex_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Complex_type()
   * @model
   * @generated
   */
  String getComplex_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getComplex_type <em>Complex type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Complex type</em>' attribute.
   * @see #getComplex_type()
   * @generated
   */
  void setComplex_type(String value);

  /**
   * Returns the value of the '<em><b>Imaginary type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Imaginary type</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Imaginary type</em>' attribute.
   * @see #setImaginary_type(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Imaginary_type()
   * @model
   * @generated
   */
  String getImaginary_type();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getImaginary_type <em>Imaginary type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Imaginary type</em>' attribute.
   * @see #getImaginary_type()
   * @generated
   */
  void setImaginary_type(String value);

  /**
   * Returns the value of the '<em><b>Atomic type specifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Atomic type specifier</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Atomic type specifier</em>' containment reference.
   * @see #setAtomic_type_specifier(atomic_type_specifier)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Atomic_type_specifier()
   * @model containment="true"
   * @generated
   */
  atomic_type_specifier getAtomic_type_specifier();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getAtomic_type_specifier <em>Atomic type specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Atomic type specifier</em>' containment reference.
   * @see #getAtomic_type_specifier()
   * @generated
   */
  void setAtomic_type_specifier(atomic_type_specifier value);

  /**
   * Returns the value of the '<em><b>Struct or union specifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Struct or union specifier</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Struct or union specifier</em>' containment reference.
   * @see #setStruct_or_union_specifier(struct_or_union_specifier)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Struct_or_union_specifier()
   * @model containment="true"
   * @generated
   */
  struct_or_union_specifier getStruct_or_union_specifier();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getStruct_or_union_specifier <em>Struct or union specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Struct or union specifier</em>' containment reference.
   * @see #getStruct_or_union_specifier()
   * @generated
   */
  void setStruct_or_union_specifier(struct_or_union_specifier value);

  /**
   * Returns the value of the '<em><b>Enum specifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Enum specifier</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Enum specifier</em>' containment reference.
   * @see #setEnum_specifier(enum_specifier)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Enum_specifier()
   * @model containment="true"
   * @generated
   */
  enum_specifier getEnum_specifier();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getEnum_specifier <em>Enum specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Enum specifier</em>' containment reference.
   * @see #getEnum_specifier()
   * @generated
   */
  void setEnum_specifier(enum_specifier value);

  /**
   * Returns the value of the '<em><b>Typedef name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Typedef name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Typedef name</em>' attribute.
   * @see #setTypedef_name(String)
   * @see org.xtext.example.mydsl.myDsl.MyDslPackage#gettype_specifier_Typedef_name()
   * @model
   * @generated
   */
  String getTypedef_name();

  /**
   * Sets the value of the '{@link org.xtext.example.mydsl.myDsl.type_specifier#getTypedef_name <em>Typedef name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Typedef name</em>' attribute.
   * @see #getTypedef_name()
   * @generated
   */
  void setTypedef_name(String value);

} // type_specifier
